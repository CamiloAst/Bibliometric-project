"Document Title",Authors,"Author Affiliations","Publication Title",Date Added To Xplore,"Publication Year","Volume","Issue","Start Page","End Page","Abstract","ISSN",ISBNs,"DOI",Funding Information,PDF Link,"Author Keywords","IEEE Terms","Mesh_Terms",Article Citation Count,Patent Citation Count,"Reference Count","License",Online Date,Issue Date,"Meeting Date","Publisher",Document Identifier
"Computation method investigation on thinking route","Yan Cui; Xin-Rong Li; Jun-Tao Wang","Computer Science and Engineering Department, North China Institute of AeroSpace and Engineering, Langfang, China; Computer Science and Engineering Department, North China Institute of AeroSpace and Engineering, Langfang, China; North China Institute of AeroSpace and Engineering, Langfang, China",2010 3rd International Conference on Advanced Computer Theory and Engineering(ICACTE),"20 Sep 2010","2010","6","","V6-146","V6-149","On the basis of analysis to existing literatures by which the thinking problems are studied using mathematic method and according to nerve foundation of thinking of human brain, several concepts such as thinking map and thinking route are proposed in this paper by imitating neuron (a kind of chemical substance) transition procedures (routes) during thinking of human brain as maps in discrete mathematics. Number of thinking routes is calculated by means of digraph adjacency matrix theory in graph theory. After comparison, the results basically satisfy the thinking routes in reality.","2154-7505","978-1-4244-6542-2","10.1109/ICACTE.2010.5579404","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5579404","neuron;synapse;thinking map;thinking route;adjacency matrix","Mathematics","","","","7","IEEE","20 Sep 2010","","","IEEE","IEEE Conferences"
"Preservice teachers' thinking styles, dispositions, and changes in their teacher behaviors","Yu-chu Yeh","National Sun Yat-Sen University, Taiwan","International Conference on Computers in Education, 2002. Proceedings.","20 Mar 2003","2002","","","610","611 vol.1","Understanding preservice teachers' thinking styles and dispositions and how these are related to positive changes in their teacher behaviors provide valuable information for teacher preparation. This study aimed to investigate the relationship between preservice teachers' critical-thinking dispositions and three thinking styles (judicial, legislative, and executive) and their behavior change in a computer simulation. 178 preservice teachers participated in this study. Their interactive teaching experiences were measured via the CS-TGCTS simulation. The findings in this study suggest that preservice teachers with a high level of critical-thinking dispositions and those with judicial or legislative thinking styles are analytical and reflective vis A-vis their teaching practice and, as a consequence, they experienced great behavior change, whereas those with executive styles did not exhibit significant behavior change at the end of the simulated teaching.","","0-7695-1509-6","10.1109/CIE.2002.1186019","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1186019","","Computer simulation;Computational modeling;Computer science education;Analysis of variance;Testing;Analytical models;Large-scale systems;Problem-solving;Educational programs","","","","4","IEEE","20 Mar 2003","","","IEEE","IEEE Conferences"
"Computational Notebooks in a Finite Element Analysis Course: Engineering Students' Reflections on the Value and Challenges of Computational Approaches","C. Vieira; D. Restrepo; J. L. De La Hoz","Department of Education, Universidad del Norte, Barranquilla, Colombia; Department of Mechanical Engineering, The University of Texas at San Antonio, San Antonio, Texas; Department of Education, Universidad del Norte, Barranquilla, Colombia",2023 IEEE Frontiers in Education Conference (FIE),"5 Jan 2024","2023","","","1","5","This work-in-progress paper introduces an innovative approach that uses computational notebooks to teach Finite Element Analysis (FEA) in a Mechanical Engineering undergraduate course to aid the understanding of complex phenomena in Mechanics of Materials, and enhance students' computational thinking skills. Research indicates that students, irrespective of their educational level, face difficulties in grasping fundamental concepts in mechanics of materials. These challenges arise from the inherent complexity of concepts like stress, strain, torsion, and buckling, which are difficult to observe, hindering comprehension. Therefore, this work aims to leverage the synergy between mechanics of materials and computational principles to actively engage students in advanced topics such as structural strength, failure of structures, and sensitivity analysis, through the use of computational notebooks. To evaluate the effectiveness of this approach, we first asked students to analyze truss structures using hand calculations following the discrete stiffness method within a Finite Element Analysis framework. Subsequently, we implemented the same method as a simulation tool in a MATLAB Computational Notebook. Finally, we asked the students to reflect on: (1) the value of using computational methods to approach Finite Element Analysis when compared to hand calculations; (2) the difficulties they faced when implementing the activities in the MATLAB Computational Notebook; (3) the support they required to successfully complete these activities; and (4) the effectiveness of the simulation tool in understanding the effect of forces and stress distributions in structures. We anticipate that computational notebooks will provide an ideal platform for sharing lessons and tutorials, enhancing student engagement, and promoting active learning. Students have access to the complete source code, allowing them to develop computational skills. Early exposure to coding, modeling, and simulation techniques is crucial in preparing students for the computational demands of modern engineering workplaces.","2377-634X","979-8-3503-3642-9","10.1109/FIE58773.2023.10342890","NSF(grant numbers:2237313); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10342890","Computational notebooks;mechanics of materials;computational thinking;threshold concepts;Finite Element Analysis","Visualization;Sensitivity analysis;Source coding;Tutorials;Reflection;Finite element analysis;Mechanical engineering","","1","","13","IEEE","5 Jan 2024","","","IEEE","IEEE Conferences"
"DISSECT: Exploring the relationship between computational thinking and English literature in K-12 curricula","N. Nesiba; E. Pontelli; T. Staley","Department of Computer Science, New Mexico State University, Las Cruces, NM, USA; Department of Computer Science, New Mexico State University, Las Cruces, NM, USA; Onate High School, Las Cruces Public Schools, Las Cruces, NM, USA",2015 IEEE Frontiers in Education Conference (FIE),"7 Dec 2015","2015","","","1","8","DISSECT (DIScover SciEnce through Computational Thinking) is a project aimed at introducing students to computer science principles by establishing computational thinking (CT) as a problem-solving technique within middle school and high school Science, Technology, Engineering, and Mathematics (STEM) courses. While DISSECT has shown successful integration of CT into middle school and high school STEM curricula, illustrating the pervasive nature of CT, a question remained; “can CT also be infused into humanities courses (e.g., English, Art, History) in addition to scientific courses (e.g., Chemistry, Biology, Computer Science)?” The answer is positive. The objective of this paper is to present one approach to bridge the gap between CT and humanities through the curriculum of a 12th-grade English Literature course. The course blends CT practices with composition and literature to provide students with the ability to write critical and comparative analyses of selected literature. This paper will describe multiple modules that integrate computational thinking into the course, and discuss the results and assessment tools used to measure student competency in computational thinking.","","978-1-4799-8454-1","10.1109/FIE.2015.7344063","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7344063","Computer science;Computer science education;Computational thinking;English literature;K-12","Algorithm design and analysis;Fellows;Computer science;Education;Google;Computers;Problem-solving","","10","","21","IEEE","7 Dec 2015","","","IEEE","IEEE Conferences"
"Research on Teaching Effectiveness of Computational Thinking Based on Service Learning","B. -H. Chen; T. -F. Huang; S. -C. Chou","Department of Information Management, Chaoyang University of Technology Taichung, Taichung City, Taiwan; General Education Center, Chaoyang University of Technology, Taiwan, Taichung, Taiwan; Department of Politics, National Chengchi University, Taipei City",2021 International Conference on Technologies and Applications of Artificial Intelligence (TAAI),"23 May 2022","2021","","","155","161","Computational thinking has been widely regarded as an important ability to adapt to the future. College students use the knowledge they have learned to help elementary students in the community learn computational thinking, thereby enhancing the motivation and achievement of the course. Use Scratch software tools to support the learning of computational thinking. In addition to cultivating students’ basic knowledge and abilities, it also assists the lack of learning resources in community elementary schools through practical actions of service learning, so that students can focus their learning on task-base purposes. Comprehensive research and analysis are conducted based on the evaluation of the students' completed works, the learning satisfaction scale, and the data of the key indicators of self-evaluation of computational thinking, plus the questionnaire survey of the primary school students receiving assistance. The results show that: it helps to stimulate students' desire to learn, thereby significantly improving academic performance and learning motivation. At the same time, it makes students have self-confidence and a sense of accomplishment, and makes learners aware of the inadequacy of self-learning, and promotes their willingness to learn from passive to active.","2376-6824","978-1-6654-0825-7","10.1109/TAAI54685.2021.00037","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9778055","computational thinking;learning motivation;task-based instruction;Scratch","Education;Learning (artificial intelligence);Task analysis;Software tools","","1","","32","IEEE","23 May 2022","","","IEEE","IEEE Conferences"
"Teaching and learning computational thinking through solving problems in Artificial Intelligence: On designing introductory engineering and computing courses","P. Silapachote; A. Srisuphab","Faculty of Information and Communication Technology, Mahidol University, Thailand; Faculty of Information and Communication Technology, Mahidol University, Thailand","2016 IEEE International Conference on Teaching, Assessment, and Learning for Engineering (TALE)","13 Feb 2017","2016","","","50","54","At the core of every computing related discipline and impacting everyone everywhere, computational thinking or CT has increasingly emerged as its own subject in all levels of education. How to effectively teach CT skills poses real challenges and creates opportunities. Focusing on engineering and computer science undergraduates, we resourcefully integrated elements of Artificial Intelligence (AI) into introductory computing courses. In addition to a comprehension of the essence of CT, AI enabled inspirations of collaborative problem solving beyond abstraction, logical reasoning, critical, and analytical thinking. It fostered the study of basic data structures and algorithms. Students enjoyed active learning classrooms. Learning to learn, they constructed essential knowledge from solving exciting AI puzzles, competing in strategic AI games, and participating in intellectual discussion. Every activity is designed to allow students to fully engage their mental tools. Neither coding nor programming was required.","2470-6698","978-1-5090-5598-2","10.1109/TALE.2016.7851769","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7851769","computational thinking (CT);artificial intelligence (AI);collaborative problem solving;active learning classrooms","Handheld computers;Conferences;Education;Decision support systems;Computer science;Search problems","","11","","16","IEEE","13 Feb 2017","","","IEEE","IEEE Conferences"
"Collaborative Game-Based Environment and Assessment Tool for Learning Computational Thinking in Primary School: A Case Study","M. Zapata-C&#x00E1;ceres; E. Mart&#x00ED;n-Barroso; M. Rom&#x00E1;n-Gonz&#x00E1;lez","Computer Science Department, Universidad Rey Juan Carlos, M&#x00F3;stoles, Spain; Computer Science Department, Universidad Rey Juan Carlos, M&#x00F3;stoles, Spain; Faculty of Education, Universidad Nacional de Educaci&#x00F3;n a Distancia, Madrid, Spain",IEEE Transactions on Learning Technologies,"19 Jan 2022","2021","14","5","576","589","Computational thinking (CT) can be considered a 21st century core skill and, accordingly, it should be taught to students at an early age. Nevertheless, the implementation of CT in school curricula is still in an experimental stage, given that different performance metrics remain unclear, including the appropriate age for learning each skill, the significant and achievable computational concepts for each school year, teaching strategies, learning effectiveness, and strategies for assessing development. Based upon constructivist problem-solving learning strategies and supported by a three-dimensional framework, a game-based environment with both individual and collaborative playing modes has been developed as a learning and an assessment tool via learning analytics. Moreover, an exploratory case study has been carried out involving 176 primary school students. Results suggest that this environment is suitable as a learning and assessment tool for CT skills in primary school, providing enduring learning, particularly when it engages the collaborative playing mode. It seems to be better adapted to early primary school stage students, who showed greater improvements and who were able to assimilate more computational concepts than expected. Likewise, special needs or low percentile students benefit even more greatly from the learning tool and especially from the collaborative playing mode. The combination of different assessment methodologies—including CT pre- and posttests, data-driven analytics, direct observation, and questionnaires—provides assessment for each of the framework computational dimensions.","1939-1382","","10.1109/TLT.2021.3111108","Madrid Regional Government(grant numbers:S2018/TCS-4307); European Structural and Investment Funds; European Social Fund; European Regional Development Fund; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9536372","Assessment;collaborative learning;computational thinking (CT);early childhood education;educational games;learning environments;programming.","Collaboration;Problem-solving;Tools;Education;Programming profession;Games;Visualization","","16","","79","IEEE","13 Sep 2021","","","IEEE","IEEE Journals"
"Promoting K-12 Computer Science Education : A Computational Thinking Partnership Project","J. Li; J. Cuddapah; M. Torres-Crespo; A. Stewart; A. Williams","Department of Computer Science and Information Technology, Hood College, Fredrick, MD; Department of Education, Hood College, Fredrick, MD; Department of Education, Hood College, Fredrick, MD; Department of Mathematics, Hood College, Fredrick, MD; The Beacon House, Hagerstown, MD","2023 Congress in Computer Science, Computer Engineering, & Applied Computing (CSCE)","9 Apr 2024","2023","","","1054","1058","This paper describes a collaborative project that was conducted to promote Computer Science (CS) and Computational Thinking (CT) Education among pre-service and in-service teachers as well as Teacher Preparation Faculty. More than 40 pre-service and in-service teachers and 9 Education faculty members from three schools participated in a learning experience designed to address the K-12 Computer Science Framework [1] and Maryland's K-12 Computer Science Standards. The collaboration was designed to develop CS/CT knowledge, understanding, skills and application among participants. In phase one of the project, pre-service and in-service teachers explored CS educational hard/software platforms and used open-source sites such as Sphero Edu, Wonder Workshop, Scratch and Code.org. They envisioned how activities apply to K-8 classrooms, and they worked collaboratively to design a problem-based project for their own students. In phase two of the project, teacher preparation faculty were trained to integrate CS and CT into several preservice courses as well as build into the coursework sequence meaningful experiences that would expose future teachers to CS and CT knowledge and skills so that they could then incorporate these into their own K-8 lesson plans. Project evaluation included formative and summative assessments to examine changes in content and pedagogical knowledge. The feedback from the participants shows positive results.","","979-8-3503-2759-5","10.1109/CSCE60160.2023.00175","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10487240","computer science education;computer science teaching standard;computation thinking;professional development","Computer science;Conferences;Education;Collaboration;Computer science education;Standards","","1","","11","IEEE","9 Apr 2024","","","IEEE","IEEE Conferences"
"Enhancing Confidence in Using Computational Thinking Skills via Playing a Serious Game: A Case Study to Increase Motivation in Learning Computer Programming","C. Kazimoglu","Faculty of Engineering, Cyprus International University, Nicosia, Cyprus",IEEE Access,"17 Dec 2020","2020","8","","221831","221851","Computer Science (CS) is a profession that positively impacts every single area of society without which today's world would come to a complete halt. Yet, there is a consensus that CS has serious conundrums particularly in attracting students, low motivation for learning computer programming and developing computational thinking (CT) skills. New motivational methods are needed to take the attention of students and adapt to their learning patterns as how people learn have changed drastically over the last two decades. To address these issues, video games and video game-based tools are proposed as a primary approach for motivating and supporting students in developing their skills in CT and support their learning of introductory programming. This research is concerned with the capture of statistical evidence on the educational effectiveness of playing a serious game specifically designed to enhance the development of CT skills to facilitate learning introductory computer programming. A total of 190 students were invited to participate in a quasi-experimental pre-post study for the purpose of analyzing the impact of an adhoc game on students' confidence in learning programming constructs and using their skills in CT. All students were studying a CS degree at the time and they were all registered to a first-year computer programming course. 151 out of 190 students successfully completed the study and the findings suggest that a) the intrinsic motivation to learn programming; b) students' perception of their knowledge and their tangible knowledge in key programming constructs (i.e. programming sequence, methods, decision making and loops); and c) students' confidence in using their CT skills were all statistically and significantly improved after playing the game. Additionally, students perceived computer programming significantly less difficult in their post study responses when compared to their pre study responses.","2169-3536","","10.1109/ACCESS.2020.3043278","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9286386","Computational thinking;serious games;computer programming;video game design;game-based learning;gamification","Programming profession;Games;Visualization;Tools;Syntactics;Education;Computer languages","","32","","98","CCBY","8 Dec 2020","","","IEEE","IEEE Journals"
"A Machine Learning-Based Adaptive Feedback System to Enhance Programming Skill Using Computational Thinking","M. Kaleem; M. A. Hassan; S. K. Khurshid","Department of Computer Science, University of Engineering and Technology at Lahore, Lahore, Pakistan; Department of Computer Science, University of Engineering and Technology at Lahore, Lahore, Pakistan; Department of Computer Science, University of Engineering and Technology at Lahore, Lahore, Pakistan",IEEE Access,"2 May 2024","2024","12","","59431","59440","The solution of a typical programming task involves algorithmic thinking, pattern recognition, decomposition, and abstraction skills. These skills are basic pillars of Computational thinking (CT) and are essential for a computer programmer. Therefore, a programming teacher needs to take these skills into account for the evaluation of students. Existing methods for improving programming competency don’t consider the Computational Thinking of students and perform grading of students without taking these skills into account. Due to this limitation, deficiencies of these skills in students remain unrevealed, posing difficulties for educators to provide need-oriented feedback. The performance of programming students is thus hindered by a lack of interventions. This study proposes a method to evaluate programming students in terms of CT skill components and group them based on their skill set. In this study, 780 students of object-oriented programming (OOP) class were given programming assignments for assessment of programming competencies. These students were then given small programming tasks requiring different computational thinking skill components for their solutions. A machine learning approach was used to perform grouping of these students based on their scores. Six groups of programming students, each having its own set of skill deficiencies, were identified as a result of clustering. One of the groups had an empty set of skill deficiencies and consisted of students proficient in programming. Each of the other five groups had a non-empty set of skill deficiencies and comprised non-proficient programming students. A group-specific skill development plan was built for the groups having skill deficiencies. It was found that such feedback was very effective and improved the CT skill deficiencies of 82% of students.","2169-3536","","10.1109/ACCESS.2024.3391873","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10506466","Computational thinking assessment;feedback;K-means clustering;programming","Programming;Programming profession;Codes;Task analysis;Source coding;Clustering algorithms;Feedback;Cognitive systems;Object oriented programming;Machine learning;Education;Performance evaluation","","1","","33","CCBYNCND","22 Apr 2024","","","IEEE","IEEE Journals"
