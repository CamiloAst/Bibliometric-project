"Document Title",Authors,"Author Affiliations","Publication Title",Date Added To Xplore,"Publication Year","Volume","Issue","Start Page","End Page","Abstract","ISSN",ISBNs,"DOI",Funding Information,PDF Link,"Author Keywords","IEEE Terms","Mesh_Terms",Article Citation Count,Patent Citation Count,"Reference Count","License",Online Date,Issue Date,"Meeting Date","Publisher",Document Identifier
"Novelette, a Usable Visual Storytelling Digital Learning Environment","A. Addone; R. De Donato; G. Palmieri; M. A. Pellegrino; A. Petta; V. Scarano; L. Serra","Dipartimento di Informatica, ISISLab, Università degli Studi di Salerno, Fisciano, Salerno, Italy; Regione Campania, Naples, Italy; Dipartimento di Informatica, ISISLab, Università degli Studi di Salerno, Fisciano, Salerno, Italy; Dipartimento di Informatica, ISISLab, Università degli Studi di Salerno, Fisciano, Salerno, Italy; Dipartimento di Informatica, ISISLab, Università degli Studi di Salerno, Fisciano, Salerno, Italy; Dipartimento di Informatica, ISISLab, Università degli Studi di Salerno, Fisciano, Salerno, Italy; Dipartimento di Informatica, ISISLab, Università degli Studi di Salerno, Fisciano, Salerno, Italy",IEEE Access,"30 Dec 2021","2021","9","","168850","168868","Educational digital storytelling is widely recognised as a powerful approach in developing literary skills, experiencing problem-solving and computational thinking, information and knowledge visualisation, building creativity and divergent thinking supported by technological solutions. However, educators feel that they miss opportunities, skills, and tools to support pupils developing creativity. Hence, we proposed a digital learning environment, named Novelette, to support both educators and learners in performing visual storytelling by scaffolding them in inventing and authoring stories. The main novelty of our approach lies in embedding literary artifices widely explored in learning settings into a digital learning environment, such as the opportunity to continue someone else’s story and the suggestion mechanism to explore analogies or synonyms starting from a word of interest. Novelette has been ideated not only as a learning environment for educators, but with educators, as it results from a user-centered and participatory design methodology to involve them in the entire design and development process actively. This paper focuses on the assessment of Novelette usability according to both educators and pupils. As a conclusive step of the co-design approach, developers tested the resulting usability according to educators in a controlled environment. Moreover, it reports usability according to learners in real settings at school. Results demonstrate that Novelette is considered usable by both target groups, and it is perceived as a powerful approach in developing creativity both according to quantitative insight offered by the System Usability Scale, a.k.a., SUS, and qualitative interpretations enabled with direct observations and structured after scenario questionnaires. We can conclude that Novelette is a pleasant and usable tool to invent and author stories and seems to be a promising approach to develop creativity.","2169-3536","","10.1109/ACCESS.2021.3137076","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9661274","Collaborative design;digital learning environment;digital storytelling;education;usability","Usability;Pupils;Creativity;Media;Visualization;Collaboration;Problem-solving","","7","","72","CCBY","22 Dec 2021","","","IEEE","IEEE Journals"
"Evaluation of the Task Programming Model in the Parallelization of Wavefront Problems","A. J. Dios; R. Asenjo; A. Navarro; F. Corbera; E. L. Zapata","Department of Computer Architecture, University of Malaga, Malaga, Spain; Department of Computer Architecture, University of Malaga, Malaga, Spain; Department of Computer Architecture, University of Malaga, Malaga, Spain; Department of Computer Architecture, University of Malaga, Malaga, Spain; Department of Computer Architecture, University of Malaga, Malaga, Spain",2010 IEEE 12th International Conference on High Performance Computing and Communications (HPCC),"27 Sep 2010","2010","","","257","264","This paper analyzes the applicability of the task programming model in the parallelization of generic wave front problems. Computations on this type of problems are characterized by a data dependency pattern across a data space, which can produce a variable number of independent tasks through the traversal of such space. Precisely, we think that it is better to formulate the parallelization of this wave front-based programs in terms of logical tasks, instead of threads for several reasons: more efficient matching of computations to available resources, faster start-up and creation task times, improved load balancing and higher level thinking. To implement the parallel wave front we have used two state-of-the art task libraries: TBB and OpenMP 3.0. In this work, we highlight the differences between both implementations, from a programmer standpoint and from the performance point of view. For it, we conduct several experiments to identify the factors that can limit the performance on each case. Besides, we present in the paper a wave front template based on tasks, template that makes easier the coding of parallel wave front codes. We have validated this template with three real dynamic programming algorithms, finding that the TBB-coded template always outperforms the OpenMP based-one.","","978-1-4244-8335-8","10.1109/HPCC.2010.78","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5581345","task programming;wavefront pattern;performance analysis","Radiation detectors;Programming;Instruction sets;Indexes;Computational modeling;Grain size;Libraries","","6","","15","IEEE","27 Sep 2010","","","IEEE","IEEE Conferences"
"A Survey on Challenges in Designing Cognitive Engines","A. M. Saghiri","Computer Engineering and Information Technology Department, Amirkabir University of Technology (Tehran Polytechnic), 424 Hafez Ave., Tehran, Iran, Tehran, Iran",2020 6th International Conference on Web Research (ICWR),"22 Jun 2020","2020","","","165","171","The primary goal of cognitive computing is to design a digitalized model that is able to mimic human thinking processes. The cognitive engine is in charge of implementing the functionality of a cognitive system. Nowadays, cognitive engines are used as a self-organized management mechanism in different fields such as computer networks, Internet of Things (IoT), and Robotics. This is because the management algorithms of these fields are going to be very complex and therefore human thinking models as digitalized models are required for fast and accurate decision making. In this paper, we summarize challenges in designing cognitive engines. Then, a set of challenges in designing the cognitive engine for body-mind operating system in the digitalized healthcare system is obtained. In the literature, our survey and also suggested case study in the healthcare system have not been considered yet.","","978-1-7281-1051-6","10.1109/ICWR49608.2020.9122273","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9122273","Cognitive Systems;Cognitive Engine;Digitalized Healthcare;Body-Mind Operating System","Computational modeling;Operating systems;Decision making;Medical services;Computer networks;Internet of Things;Cognitive systems","","4","","82","IEEE","22 Jun 2020","","","IEEE","IEEE Conferences"
"Teaching UbiComp With an Integrated Ethics and Societal Implications Twist","E. Hornecker","Faculty of Media, Department of Media Informatics, Bauhaus-Universität Weimar, Weimar, Germany",IEEE Pervasive Computing,"17 Oct 2024","2024","23","3","58","64","How can we integrate thinking about ethics and societal implications of technology into computing and engineering education? To have an impact, this kind of thinking needs to be trained and normalized. This can be achieved by integrating such considerations into standard courses taught by faculty, who thereby act as a role model. Yet most faculty feel unprepared to do so, as they do not feel they are experts on this. I argue that we should not rely on coteachers from philosophy and ethics to dare to address such topics. I share my experiences of teaching a “Ubiquitous Computing” course in a computer science context, which not only addresses the human–computer interaction perspective of designing “good experiences” but also fosters students’ reflection on potential negative impacts and on values in design.","1558-2590","","10.1109/MPRV.2024.3421068","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10721295","","Pervasive computing;Computer science;Ethics;Philosophical considerations;Computational modeling;Engineering education;Standards;Social implications of technology;Design methodology;Education","","","","15","IEEE","17 Oct 2024","","","IEEE","IEEE Magazines"
"Incrementalization of Vertex-Centric Programs","T. A. K. Zakian; L. A. R. Capelli; Z. Hu","Dept. of Computer Science, University of Oxford, Oxford, United Kingdom; School of Informatics, The University of Edinburgh, Edinburgh, United Kingdom; Information Systems Architecture Research Division, National Institute of Informatics, Tokyo, Japan",2019 IEEE International Parallel and Distributed Processing Symposium (IPDPS),"2 Sep 2019","2019","","","1019","1029","As the graphs in our world become ever larger, the need for programmable, easy to use, and highly scalable graph processing has become ever greater. One such popular graph processing model-the vertex-centric computational model-does precisely this by distributing computations across the vertices of the graph being computed over. Due to this distribution of the program to the vertices of the graph, the programmer “thinks like a vertex” when writing their graph computation, with limited to no sense of shared memory and where almost all communication between each on-vertex computation must be sent over the network. Because of this inherent communication overhead in the computational model, reducing the number of messages sent while performing a given computation is a central aspect of any efforts to optimize vertex-centric programs. While previous work has focused on reducing communication overhead by directly changing communication patterns-by altering the way the graph is partitioned and distributed, or by altering the graph topology itself-in this paper we present a different optimization strategy based on a family of complementary compile-time program transformations in order to minimize communication overhead by changing both the messaging and computational structures of programs. Particularly, we present and formalize a method by which a compiler can automatically incrementalize a vertex-centric program through a series of compile-time program transformations-by modifying the on-vertex computation and messaging between vertices so that messages between vertices represent patches to be applied to the other vertex's local state. We empirically evaluate these transformations on a set of common vertex-centric algorithms and graphs and achieve an average reduction of 2.7X in total computational time, and 2.9X in the number of messages sent across all programs in the benchmark suite. Furthermore, since these are compile-time program transformations alone, other prior optimization strategies for vertex-centric programs can work with the resulting vertex-centric program just as they would a non-incrementalized program.","1530-2075","978-1-7281-1246-6","10.1109/IPDPS.2019.00109","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8821014","Compilers;Vertex-Centric Computation;Incrementalization","Computational modeling;Optimization;Informatics;Writing;Benchmark testing;Programming;Distributed processing","","5","","20","IEEE","2 Sep 2019","","","IEEE","IEEE Conferences"
"Machine Mentality and its Progression Through the Complexity of Mathematical Modules","M. Preetha; M. Mishra; S. S. Jayakumar; D. Dongre; N. Thangarasu; N. Pandey","Department of CSE, Prince Shri Venkateshwara Padmavathy Engineering College, Chennai, India; Chitkara Centre for Research and Development, Chitkara University, Himachal Pradesh, India; School of Sciences, Forensic Science, JAIN, Deemed to be University, Bangalore, Karnataka, India; AI & Ds, Vishwakarma Institute of Technology, Pune, India; Department of Computer Science, Karpagam Academy of Higher Education, Coimbatore; Centre of Research Impact and Outcome, Chitkara University, Rajpura, Punjab, India",2024 IEEE 2nd International Conference on Innovations in High Speed Communication and Signal Processing (IHCSP),"16 Apr 2025","2024","","","1","6","This work examines how machine awareness has changed over time by examining mathematical module complexity using a new technique that combines historical study, real-world testing, and sophisticated machine learning algorithms. We can completely comprehend how mathematical complexity influences machine intelligence with the provided strategy. Our method begins with a detailed examination of AI's mathematical underpinnings' evolution. This historical perspective shows how arithmetic has affected robot thinking. Second, real-world trials evaluate machine learning and mathematical models. These approaches are evaluated on accuracy, precision, memory, F1 score, mean squared error, and computing efficiency. The comparison shows that the recommended strategy outperforms six well-known strategies that employ many criteria. Results show the proposed strategy works. Traditional approaches can't match its 95% accuracy. The approach is more beneficial than normal methods since it has superior accuracy, memory, and F1 scores. A smaller mean squared error indicates that the recommended strategy predicts better than current methods. Its 7.2 millisecond processing time makes it the most computing-efficient option. This unique methodology lets us understand how machine intelligence has evolved and choose the optimal solutions for particular occupations. The recommended technique is effective for studying the complex link between mathematical modules and AI progress since it incorporates historical background and cuttingedge algorithms.","","979-8-3503-6894-9","10.1109/IHCSP63227.2024.10959753","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10959753","Artificial Intelligence;Computational Efficiency;Empirical Experimentation;Historical Analysis;Machine Learning Algorithms;Mathematical Complexity","Technological innovation;Machine learning algorithms;Accuracy;Signal processing algorithms;Machine learning;Signal processing;Complexity theory;Computational efficiency;Machine intelligence;Robots","","","","26","IEEE","16 Apr 2025","","","IEEE","IEEE Conferences"
"COPOD: Copula-Based Outlier Detection","Z. Li; Y. Zhao; N. Botta; C. Ionescu; X. Hu","Northeastern Univ. & Arima Inc., Canada; Carnegie Mellon Univ., Pittsburgh, USA; PIK, Potsdam, Germany; THD, Germany; Carnegie Mellon Univ., Pittsburgh, USA",2020 IEEE International Conference on Data Mining (ICDM),"9 Feb 2021","2020","","","1118","1123","Outlier detection refers to the identification of rare items that are deviant from the general data distribution. Existing approaches suffer from high computational complexity, low predictive capability, and limited interpretability. As a remedy, we present a novel outlier detection algorithm called COPOD, which is inspired by copulas for modeling multivariate data distribution. COPOD first constructs an empirical copula, and then uses it to predict tail probabilities of each given data point to determine its level of ""extremeness"". Intuitively, we think of this as calculating an anomalous p-value. This makes COPOD both parameter-free, highly interpretable, and computationally efficient. In this work, we make three key contributions, 1) propose a novel, parameter-free outlier detection algorithm with both great performance and interpretability, 2) perform extensive experiments on 30 benchmark datasets to show that COPOD outperforms in most cases and is also one of the fastest algorithms, and 3) release an easy-to-use Python implementation for reproducibility.","2374-8486","978-1-7281-8316-9","10.1109/ICDM50108.2020.00135","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9338429","outlier detection;anomaly detection;copula;data mining","Conferences;Computational modeling;Prediction algorithms;Data models;Computational efficiency;Task analysis;Anomaly detection","","201","","14","IEEE","9 Feb 2021","","","IEEE","IEEE Conferences"
"Algorithmic thinking observation: How students of applied informatics break the mystery of black box applications","M. Cápay","Department of Informatics, Constantine the Philosopher University in Nitra, Nitra, Slovakia",2014 International Conference on Interactive Collaborative Learning (ICL),"22 Jan 2015","2014","","","535","540","The Black Box is a system with the internal organization and behavior about which the observer has no information. However, it is possible to impact the whole system via its inputs and observe its reactions via its outputs. The paper is concerned with the implementation of “black box” type of activities to teach computational thinking. The main idea is to give the students the puzzles and ask them to “play” with the inputs and observe the outputs enough to determine the internal mechanisms or principles that produce particular outputs from given inputs. First year students were asked to define a formula or describe a principle, based on which the input transforms itself into the output. There were four different types of answers: the student could be able (1) to state a formal proof, (2) to state a verbal proof, (3) to state a basic concept of algorithms, or (4) not to state any type of correct solution. We found out that a lot of the students were not able to think about the concept of the application functioning and were not able to create any formal description of algorithms.","","978-1-4799-4437-8","10.1109/ICL.2014.7017829","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7017829","teaching methods;black box;scientific approach;algorithm;reverse engineering","Programming;Informatics;Educational institutions;Mathematics;Problem-solving","","2","","23","IEEE","22 Jan 2015","","","IEEE","IEEE Conferences"
"Juice dispenser for hard-working students","M. -F. CRAINIC; S. PREITL","Dept. of Automation and Applied Informatics, Polytechnic University of Timisoara, Timisoara, Romania; Dept. of Automation and Applied Informatics, Polytechnic University of Timisoara, Timisoara, Romania",2019 IEEE 13th International Symposium on Applied Computational Intelligence and Informatics (SACI),"9 Jun 2020","2019","","","223","228","We want to increase the quality of our educational system, so we developed a juice dispenser for the hard-working students. In order to stimulate the creativity and critical thinking among students we suggest online quizzes with credits. So, if you had enough credit you could get free juice from the juice dispenser. The paper presents how this juice dispenser works and an unusual way for getting the tastiest fruits juice using neural networks.","","978-1-7281-0686-1","10.1109/SACI46893.2019.9111517","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9111517","","","","2","","11","IEEE","9 Jun 2020","","","IEEE","IEEE Conferences"
"Transforming the Instruction of Introductory Computing to Engineering Students","A. R. Hurson; S. Sedigh","Department of Computer Science, Missouri University of Science and Technology, Rolla, MO, USA; Department of Electrical and Computer Engineering, Missouri University of Science and Technology, Rolla, MO, USA",2010 IEEE Transforming Engineering Education: Creating Interdisciplinary Skills for Complex Global Environments,"15 Jul 2010","2010","","","1","19","Computer science as a discipline encompasses the study and creation of computational techniques for problem-solving. Unfortunately, much of the benefit of these techniques to engineering students is lost in translation, in part due to the disconnect between introductory computing courses and the disciplinary courses that introduce problems that could benefit from computational techniques. A considerable body of literature has documented the ineffectiveness of traditional programming courses in transferring usable knowledge to students, specifically where problem-solving skills and computational thinking are concerned. This paper describes a transformative change to the instruction of introductory computing to engineering students, in the context of a single non-major course. In the proposed architecture, a core lecture is supplemented with plug-in domain-specific modules and problems that are presented in domain-specific recitation/laboratory sections. The focus of the lecture component of the course is to introduce the core concepts and skills required for computational thinking, including algorithms and software engineering techniques. The recitation/laboratory component encourages and guides the application of these skills to introductory problems in engineering. The objective is to shift the emphasis from the minutia of the syntax of textual programming languages to computational thinking.","","978-1-4244-6042-7","10.1109/TEE.2010.5508834","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5508834","","Computer aided instruction;Engineering students;Problem-solving;Laboratories;Computer science;Computer architecture;Software algorithms;Software engineering;Application software;Computer languages","","","","24","IEEE","15 Jul 2010","","","IEEE","IEEE Conferences"
