document title,authors,author affiliations,publication title,date added to xplore,publication year,volume,issue,start page,end page,abstract,issn,isbns,doi,funding information,pdf link,author keywords,ieee terms,mesh_terms,article citation count,patent citation count,reference count,license,online date,issue date,meeting date,publisher,document identifier,cluster_tfidf,cluster_jaccard
Promoting Computational Thinking Skills Through Game-Based Learning of Students in Lower Secondary School,S. Saenboonsong; A. Poonsawad,"Faculty of Education, Phranakhon Si Ayutthaya Rajabhat University, Phranakhon Si Ayutthaya, Thailand; Faculty of Science and Technology, Phranakhon Si Ayutthaya Rajabhat University, Phranakhon Si Ayutthaya, Thailand",2024 9th International STEM Education Conference (iSTEM-Ed),6 Sep 2024,2024,,,1,4,"This study's objectives were to: 1) compare computational thinking skills before and after game-based learning activities; and 2) study students' satisfaction after game-based learning. The research methodology uses the ADDIE model by driving game-based learning activities and promoting students with computational thinking skills, including decomposition, pattern recognition, abstraction, and algorithm design. The statistical methods used to analyze the data were mean, standard deviation, and t-test. The study's findings revealed that 1) the students' computational thinking skills improved significantly after engaging in game-based learning activities, demonstrating statistical significance at the.05 level, and 2) the overall students' satisfaction after activities with game-based learning was averaged at the highest level (= 4.75, S.D. = 0.52).",,979-8-3503-6597-9,10.1109/iSTEM-Ed62750.2024.10663178,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10663178,computational thinking skills;game-based learning;learning activity,Statistical analysis;Computational modeling;Education;Pattern recognition;Standards,,,,20.0,IEEE,6 Sep 2024,,,IEEE,IEEE Conferences,8,6
Construction and Application of a Computational Thinking Assessment Framework from the Perspective of the Iceberg Model,X. Zhou; W. Zhang; S. Wang; H. Chen,"Faculty of Artificial Intelligence in Education, Central China Normal University, Wuhan, China; Faculty of Artificial Intelligence in Education, Central China Normal University, Wuhan, China; Faculty of Artificial Intelligence in Education, Central China Normal University, Wuhan, China; School of Information Technology Application Innovation, Wuhan polytechnic, Wuhan, China",2023 5th International Workshop on Artificial Intelligence and Education (WAIE),18 Apr 2024,2023,,,96,100,"Computational thinking assessment is an important part of testing the effectiveness of computational thinking cultivation. However, the existing computational thinking assessments still suffer from the problem of insufficient examination of non-cognitive factors, leading to the lack of validity of its assessment results. Since the iceberg model can comprehensively and deeply explore individual characteristics, this paper draws on the division idea of the model and divides computational thinking into explicit computational thinking the basic knowledge required to solve problems using computational thinking and implicit computational thinking the internal psychological characteristics of individuals in the process of using computational thinking. A comprehensive assessment framework of computational thinking is constructed, which contains five dimensions: knowledge and skills, self-efficacy, internet attitude, learning motivation, and thinking style. Finally, its application in the hierarchical teaching of computational thinking and suggestions for personalized teaching programs are given in order to promote the development of personalized education in computational thinking.",,979-8-3503-0706-1,10.1109/WAIE60568.2023.00025,National Natural Science Foundation of China(grant numbers:61977031); ,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10496944,computational thinking;computational thinking assessment;iceberg model;assessment framework;computational thinking education,Computational modeling;Conferences;Education;Psychology;Icebergs;Artificial intelligence;Testing,,,,15.0,IEEE,18 Apr 2024,,,IEEE,IEEE Conferences,8,9
Helping Novice Programmers to Bootstrap in the Cloud: Incorporating Support for Computational Thinking into the Game Design Process,N. Ahmadi; M. Jazayeri; M. Landoni,"Faculty of Informatics, University of Lugano, Lugano, Switzerland; Faculty of Informatics, University of Lugano, Lugano, Switzerland; Faculty of Informatics, University of Lugano, Lugano, Switzerland",2012 IEEE 12th International Conference on Advanced Learning Technologies,16 Aug 2012,2012,,,349,353,"Game design environments are traditionally used as means for engaging non-programmers in the learning process. However, these environments lack specific support for teaching computational thinking to novices. Typically, such skills are acquired in ad hoc practical sessions with supervision provided by teachers or peers. The usual scenario is where a teacher guides the students in solving these problems during a game design session. In informal learning settings, step-by-step tutorials for creating existing games are used to compensate for the lack of computer support for solving design and computational problems. In this paper we suggest a game design process that combines support for computational thinking with tool usage, by identifying the most common computational thinking problems and providing a generic solution to them. We have evaluated our solution in the context of AgentWeb, an online cloud-based game design environment for novices. We discuss how to incorporate suggested computational thinking solutions as computer assistant into the game design user interface.",2161-377X,978-1-4673-1642-2,10.1109/ICALT.2012.24,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6268116,end-user programming;computational thinking;design thinking;game design environments;informal learning;cognitive walkthrough;cloud-based environments,Games;Programming;Educational institutions;Computers;Context;Tutorials,,5.0,,15.0,IEEE,16 Aug 2012,,,IEEE,IEEE Conferences,8,7
Influence of Programming Robot Learning Mode Based on Conceptual Mapping on College Students' Computational Thinking,B. -H. Chen; L. -H. Chen; C. -C. Chen; C. -H. Chen,"Department of Information Management, Chaoyang University of Technology, Taiwan; Department of Information Management, Chaoyang University of Technology, Taiwan; Department of Automatic, Control Engineering Feng Chia University, Taiwan; Master Program of Professional Teacher, National Taichung University of Education, Taiwan","2021 IEEE 3rd Eurasia Conference on IOT, Communication and Engineering (ECICE)",23 Dec 2021,2021,,,617,620,"As the information age has progressed, computational thinking ability to solve problems has become an indispensable way of life in life. Many scholars believe that the process of solving problems will be more logical if they have computational thinking ability. At the same time, scholars believe that a good learning method improves learners' intrinsic motivation. Therefore, in this research, we try to use conceptual mapping so that students can construct knowledge when composing their own images, as the focus of this learning model and computational thinking is the thinking process and the two coincide. This research intends to introduce the traditional programming robot course into conceptual mapping and measure whether there are differences in computational thinking tendencies, problem-solving tendencies, and intrinsic motivations between students who use conceptual mapping and those who do not use it. The students in the experimental group with conceptual mapping activities developed computational thinking skills during the program robotics course. The students in the control group first watched the computational thinking explanation video to explain the computational thinking skills to the students, and then taught in the traditional programming robotics course.",,978-1-6654-4516-0,10.1109/ECICE52819.2021.9645630,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9645630,Concept mapping;computational thinking;programmed robot 10 pts;intrinsic motivation,Learning systems;Conferences;Computational modeling;Programming;Information age;Robot learning;Problem-solving,,,,25.0,IEEE,23 Dec 2021,,,IEEE,IEEE Conferences,8,7
A practical research on the training of middle school students' computational thinking based on problem solving in systematic information process view,M. Zhao; W. Hu,"College of Education Science, Bohai University, Jinzhou, China; College of Education Science, Bohai University, Jinzhou, China","2022 3rd International Conference on Education, Knowledge and Information Management (ICEKIM)",1 Feb 2023,2022,,,1037,1040,"Computational thinking is the process sequence of solving problems and behaves a method of systematic solving problems. Computational thinking is essentially a view of systematic information processing process. In essence, developing the computational thinking of middle school students is to improve their problem-solving ability and the corresponding practical accomplishment. The instructional activity design based on six links of problem solving can well meet the need of cultivating students’ computational thinking. The instructional mode of systematic problem solving in middle school can improve students’ learning effects and satisfaction, and promote students’ computational thinking ability significantly. The method of systematic information processing process can be trained.",,978-1-6654-1666-5,10.1109/ICEKIM55072.2022.00225,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10027412,component;Computation;Computational thinking;Middle school information technology class,Training;Analytical models;Systematics;Computational modeling;Information processing;Information management;Problem-solving,,,,16.0,IEEE,1 Feb 2023,,,IEEE,IEEE Conferences,8,7
Integrating Computational Thinking Into the Curricula to Bridge the Skill Gap in Engineering Education,N. Dehbozorgi; M. Nezafati; M. Roopaei,"Dept. of Software Engineering, Kennesaw State University, Marietta, GA, USA; Dept. of Biomedical Engineering, Georgia Institute of Technology, Atlanta, GA, USA; Dept. of Electrical and Computer Engineering), University of Wisconsin-Platteville, Platteville, WI, USA",2024 IEEE Frontiers in Education Conference (FIE),26 Feb 2025,2024,,,1,4,"This work-in-progress research-to-practice paper presents an intervention on integrating computational thinking modules into a software engineering course. The national consensus on the significance of computational thinking has prompted the expansion of related educational initiatives over the past decade. Since the definition of computational thinking by Wing in 2006, this concept has gained significant attention within the educational community. Particularly this surge of interest has led to extensive research into its conceptual foundations and subsequent integration into educational curricula since 2013. National initiatives have since emerged to incorporate computational thinking into the educational system. Furthermore, as artificial intelligence and computing systems become increasingly integrated into daily life, there is a growing demand from industries for a workforce and graduates adept at critical thinking and problem-solving. Aligned with this national movement, our study presents a two-year institutional initiative, aimed at integrating computational thinking into the software engineering program. The software engineering discipline extensively involves design thinking and problem-solving skills. However, we noticed that these higher-level skills are not imparted early in the program to teach students this method of thinking and approaching problems. To bridge this skill gap, we developed a set of computational thinking modules and integrated them into a gateway course in the software engineering program. Over two years, we implemented this intervention in an introductory-level course and evaluated its impact on students' computational thinking skills by analyzing their responses to a standard Computational Thinking Assessment survey. The results showed significant improvement in most components. These early findings underscore the effectiveness of integrating these computational thinking modules into the gateway courses, regardless of the specific course topic. A notable feature of these modules is their adaptability to diverse engineering courses, suggesting broader applicability across disciplines. Moving forward, our research aims to expand the integration of the computational thinking modules into various courses in other institutes across the nation and analyze their impact on student performance.",2377-634X,979-8-3503-5150-7,10.1109/FIE61694.2024.10892914,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10892914,Computational Thinking;Software Engineering;Engineering Education,Bridges;Surveys;Industries;Logic gates;Problem-solving;Surges;Engineering education;Artificial intelligence;Standards;Software engineering,,,,16.0,IEEE,26 Feb 2025,,,IEEE,IEEE Conferences,8,8
Design and implementation of a graphical programming class for computational thinking in elementary schools,T. Xue; S. He; W. Guo,"School of Educational Technology, Northwest Normal University, Lanzhou, China; School of Educational Technology, Northwest Normal University, Lanzhou, China; School of Educational Technology, Northwest Normal University, Lanzhou, China",2024 International Symposium on Educational Technology (ISET),26 Sep 2024,2024,,,376,380,"As the process of artificial intelligence progresses, it is recognized that computational thinking is one of the basic skills for understanding and solving problems and one of the core literacies of the IT discipline. There are various ways to develop students’ computational thinking, and at the primary and secondary school levels, graphical programming classes are an important way to do so. This study establishes a framework for an instructional program aimed at developing students’ computational thinking skills based on elementary school graphic programming classes. Combining curriculum standards, graphic programming standards for youth programming skills, and International Computational Thinking Challenge standards, relevant teaching cases are designed to foster students’ computational thinking and promote the development of computational concepts, computational practices, and computational concepts.",2766-2144,979-8-3503-6141-4,10.1109/ISET61814.2024.00081,National Natural Science Foundation of China; ,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10685695,Computational Thinking;Graphical Programming;Teaching,Graphics;Educational technology;Artificial intelligence;Programming profession;Standards,,,,11.0,IEEE,26 Sep 2024,,,IEEE,IEEE Conferences,8,6
Fractal Geometry: Enhancing Computational Thinking with MIT Scratch,R. Vinayakumar; K. Soman; P. Menon,"Center for Computational Engineering and Networking (CEN), Amrita Vishwa Vidyapeetham, Coimbatore, India; Center for Computational Engineering and Networking (CEN), Amrita Vishwa Vidyapeetham, Coimbatore, India; Lakhshya Cyber Security Labs Pvt Ltd, Coimbatore","2018 9th International Conference on Computing, Communication and Networking Technologies (ICCCNT)",18 Oct 2018,2018,,,1,6,"Recent developments in pedagogy have focused upon computational thinking. Computational thinking provides a way to solve the problem and it is a key practice of science education. The importance of computational thinking is rarely found in K-12 education. Computational thinking is a an important skill everyone needs and it is correlated with many other concepts. These factors have made the development of new tools and syllabus. In this paper, we aim to show the experiments of fractal geometry using MIT Scratch. These computational exercises facilitate to learn many of computational thinking skills that are very important for the people in the near future. Based on our experience with students, we claim that the concept of fractal and its implementation in MIT Scratch is the best practices to improve computational thinking in K-12 school level students.",,978-1-5386-4430-0,10.1109/ICCCNT.2018.8494172,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8494172,Computational thinking;fractal geometry;Scratch;K-12 education;block based programming;21st century learning skills,Fractals;Programming profession;Education;Visualization;Games,,1.0,,19.0,IEEE,18 Oct 2018,,,IEEE,IEEE Conferences,8,7
Approaches for teaching computational thinking strategies in an educational game: A position paper,A. Bauer; E. Butler; Z. Popović,"Center for Game Science, University of Washington, Seattle, WA; Center for Game Science, University of Washington, Seattle, WA; Center for Game Science, University of Washington, Seattle, WA",2015 IEEE Blocks and Beyond Workshop (Blocks and Beyond),4 Jan 2016,2015,,,121,123,"Computer science is expanding into K12 education and numerous educational games and systems have been created to teach programming skills, including many block-based programming environments. Teaching computational thinking has received particular attention, and more research is needed on using educational games to directly teach computational thinking skills. We propose to investigate this using Dragon Architect, an educational block-based programming game we are developing. Specifically, we wish to study ways of directly teaching computational thinking strategies such as divide and conquer in an educational game, as well as ways to evaluate our approaches.",,978-1-4673-8367-7,10.1109/BLOCKS.2015.7369019,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7369019,block-based programming;game-based learning;computational thinking;CS education,Games;Programming profession;Programming environments;Computer science education;Problem-solving,,7.0,,15.0,IEEE,4 Jan 2016,,,IEEE,IEEE Conferences,8,7
An Investigation of Undergraduates’ Computational Thinking in a Sophomore-Level Biomedical Engineering Course,H. Shoaib; M. Cardella; A. Madamanchi; D. Umulis,"Department of Engineering Education, Purdue University, West Lafayette, USA; Department of Engineering Education, Purdue University, West Lafayette, USA; Department of Agricultural & Biological Engineering, Purdue University, West Lafayette, USA; Department of Agricultural & Biological Engineering, Purdue University, West Lafayette, USA",2019 IEEE Frontiers in Education Conference (FIE),12 Mar 2020,2019,,,1,4,"This research study presents our work focused on studying the development of introductory computational thinking in undergraduate biomedical engineering students. In response to the growing computational intensity of the healthcare industry, biomedical engineering (BME) undergraduate education is starting to emphasize computation and computational thinking. Computational thinking is a way of thinking that uses concepts and methodologies of computing to solve problems in interdisciplinary and multidisciplinary subjects. In broader terms, computational thinking is not only associated with using computational tools but also with the thought process of solving a problem by data representation, problem decomposition, and algorithm design. Despite being so important, there is little research work or information available on the development of computational thinking in BME undergraduate students. Our research focuses on how BME undergraduate students develop computational thinking skills while performing group activities related to problem-solving. In order to conduct this study, we incorporate a teaching methodology that prompts computational thinking in a thermodynamics course being taught at a public mid-western university to approximately 120 sophomore students. We observe classroom activities involving analytical problem solving followed by pseudo code generation for computational coding. In order to investigate computational thinking, we collect classroom observations of small groups of students as they come up with a solution to an analytical problem with each other. We complement the observation notes of the classroom activities with follow up semi structured interviews with individual students from five groups. Thematic analysis of the student interviews is used in order to analyze student responses towards the incorporation of computation intensive teaching methodology. This Work in Progress helps us expand our understanding of computational thinking development and the challenges involved in performing computational thinking activity in BME undergraduate students.",2377-634X,978-1-7281-1746-1,10.1109/FIE43999.2019.9028503,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9028503,thermodynamics;computational thinking,Mathematical model;Thermodynamics;Interviews;Problem-solving;Computational modeling;Analytical models;Testing,,2.0,,11.0,IEEE,12 Mar 2020,,,IEEE,IEEE Conferences,8,8
Discussion of Ability Cultivation of Computational Thinking in Course Teaching,Z. Deng; W. Huang; R. Dong,"School of Computer Science and Control Guilin University of Electronic Technology, Guilin, China; School of Computer Science and Control Guilin University of Electronic Technology, Guilin, China; School of Computer Science and Control Guilin University of Electronic Technology, Guilin, China",2009 International Conference on Education Technology and Computer,21 Jul 2009,2009,,,197,200,"Computational thinking is taken for the fundamental skills for everyone, not just computer scientist, to learn and use. It remains to be explored in many aspects how to understand the essence of computational thinking and how cultivate the computational thinking ability of students. In the view of course teaching of computer science, this paper discusses the perception of the essence of computational thinking and presents a method for the cultivation of the computational thinking ability by using courses as carrier, and a case study of the course Data Structures and Algorithms.",2155-1812,978-0-7695-3609-5,10.1109/ICETC.2009.16,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5169480,Computational thinking;methodology;course teaching;data structure and algorithm,Computer science;Pervasive computing;Concurrent computing;Embedded computing;Data structures;Computer vision;Educational technology;Humans;Computer science education;Printing machinery,,5.0,,4.0,IEEE,21 Jul 2009,,,IEEE,IEEE Conferences,8,5
Pair-Programming Curriculum Development of Motion-Based Game for Enhancing Computational Thinking Skills,C. -K. Chang; Y. -T. Tsai,"Department of Information and Learning Technology, National University of Tainan, Tainan, Taiwan; Department of Information and Learning Technology, National University of Tainan, Tainan, Taiwan",2018 7th International Congress on Advanced Applied Informatics (IIAI-AAI),18 Apr 2019,2018,,,284,287,"Some curriculum of making computer games were developed to engage students in digital game-making activities so as to enhance their computational thinking skills during the last few years. The findings of those studies are quite positive, especially concerning the promotion of computational thinking skills. However, many students seem to face difficulties in the processes of the game development, such as debugging, applying mathematics, or physics subjects. Additionally, students often have solved the problems and understood concepts, mainly math formulas and physics concepts, alone while creating their games. This study presents an innovative curriculum design that suggests two students playing different role to make motion-based touchless games (i.e., games that are based on natural user interaction technologies, like the Microsoft Kinect camera or Leap Motion). Based on the requirements of the innovative curriculum and interaction technologies, students can naturally fulfill the ideal of pair programming and get various benefits from each other.",,978-1-5386-7447-5,10.1109/IIAI-AAI.2018.00061,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8693273,computational thinking;learning by making games;natural user interaction;Kinect;pair programming,Games;Programming;Tools;Face;Cameras;Collaboration;Task analysis,,5.0,,16.0,IEEE,18 Apr 2019,,,IEEE,IEEE Conferences,8,6
Developing Future Computational Thinking in Foundational CS Education: A Case Study From a Liberal Education University in India,B. Kalluri; P. Prasad; P. Sharma; D. Chippa,"School of Computing and Data Sciences, FLAME University, Pune, India; School of Computing and Data Sciences, FLAME University, Pune, India; School of Computing and Data Sciences, FLAME University, Pune, India; School of Computing and Data Sciences, FLAME University, Pune, India",IEEE Transactions on Education,20 Dec 2024,2024,67.0,6.0,944,953,"Contribution: This article proposes a new theoretical model with a goal to develop future human computational thinking (CT) in foundational computer science (CS) education. The model blends six critical types of thinking, i.e., logical thinking, systems thinking, sustainable thinking, strategic thinking, creative thinking, and responsible thinking into the design of a first-year undergraduate programming course. The study describes a creative blended pedagogy that embeds the proposed model into the course plan.Background: The emergence of artificial intelligent systems such as large language models from a knowledge provider perspective, coupled with a gradual change in post-pandemic outlook of education challenge the relevance and raises concerns about the future of education. The 21st-century human CT requirements, viz., learning to code (skill) and thinking computationally (competency), will be inadequate in the future. Moreover, there is substantial evidence which shows that most introductory programming courses fail to integrate critical elements like ethics and responsibility as part of the course.Intended Outcomes: The authors anticipate experiential learning models such as this has immense potential to future-proof CS education, as well as make future software engineers responsible citizens.Application Design: The proposed model blends six types of thinking into the design and activities of the course. The underlying theoretical basis of these activities revolve around three key principles: 1) experiential learning; 2) self-reflection; and 3) peer learning.Findings: This case study from a liberal educational institution in India qualitatively shows evidence of students developing six critical elements of thinking that shapes their future CT ability.",1557-9638,,10.1109/TE.2024.3394060,seed fund given to Kalluri’s Urban Design and Open-innovation Studio at FLAME University; ,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10530940,21st-century skills;computer science (CS);creative pedagogy;foundational education;future thinking,Education;Sustainable development;Computational modeling;Systems thinking;Programming profession;Software systems;Green products,,,,35.0,IEEE,15 May 2024,,,IEEE,IEEE Journals,8,8
The Research of Programming Teaching in Primary School on the Cultivation of Computational Thinking,Y. Wang; Y. Zhang; A. Mao; J. Wang; N. Li,"School of Educational Information Technology, Central China Normal University, Wuhan, China; School of Educational Information Technology, Central China Normal University, Wuhan, China; Primary School Affiliated to University of Science and Technology, Wuhan, China; Teacher Education College, Huzhou University, Huzhou, China; School of Educational Information Technology, Central China Normal University, Wuhan, China",2020 Ninth International Conference of Educational Innovation through Technology (EITT),19 Jan 2021,2020,,,250,255,"With the development of digital technologies, teaching computational thinking and relative skills in the K-12 curriculum can benefit students in thinking and create in the digital area. This study designed a programming course to help students develop computational thinking and relative skills, and conducted a practice in a primary school. Results indicated that students were benefited from three stages of the teaching process. Students' computational thinking knowledge, programming knowledge and skills, and problem-solving were developed after the learning of a semester. The programming works of the students also revealed that there was a tendency in the development of creativity.",2166-0549,978-1-7281-9171-3,10.1109/EITT50754.2020.00051,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9320732,computational thinking;programming course design;K-12 curriculum,Programming profession;Problem-solving;Testing;Media;Debugging;Visualization;Task analysis,,1.0,,11.0,IEEE,19 Jan 2021,,,IEEE,IEEE Conferences,8,6
An Empirical Study on the Effect of Gamified Teaching in Scratch Courses on Developing Elementary Students' Computational Thinking,Y. Chen; Y. Zhao; M. Wang,"School of Information, Yunnan Normal university, Kunming, China; School of Information, Yunnan Normal university, Kunming, China; School of Information, Yunnan Normal university, Kunming, China",2024 13th International Conference on Educational and Information Technology (ICEIT),5 Jun 2024,2024,,,78,83,"Computational thinking is a crucial skill for students to analyze and solve problems, and programming education serves as an important pathway to cultivate computational thinking. This study combines relevant literature and utilizes Scratch, a visual programming software, to construct a gamified teaching model for Scratch courses. A quasi-experimental research design was employed, involving two fifth-grade classes from a primary school in K city. The study employed methods such as analysis of student works, SPSS scale data analysis, and student interviews to investigate the impact of gamified teaching in Scratch courses on developing elementary students' computational thinking. The results indicate that gamified teaching in Scratch courses significantly enhances the computational thinking level of elementary students, particularly in the dimensions of critical thinking, problem-solving ability, and algorithmic thinking. Based on the research findings, it is recommended that gamified teaching in Scratch courses should involve appropriate teaching tools, incorporate game-based learning, emphasize problem-solving, encourage collaborative learning, and provide training for educators competent in programming education.",,979-8-3503-7266-3,10.1109/ICEIT61397.2024.10541025,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10541025,scratch;gamification;elementary students;computational thinking;empirical study,Training;Visualization;Federated learning;Education;Urban areas;Software;Problem-solving,,1.0,,12.0,IEEE,5 Jun 2024,,,IEEE,IEEE Conferences,8,6
Design and Effectiveness Analysis of Interactive Strategies for Teaching Graphical Programming Oriented to Cultivate Computational Thinking,F. Wang; L. Chen; W. Wang,"Department of Information Science and Technology, Northeast Normal University, Changchun, China; Department of Information Science and Technology, Northeast Normal University, Changchun, China; Department of Information Science and Technology, Northeast Normal University, Changchun, China",2023 5th International Conference on Computer Science and Technologies in Education (CSTE),29 Sep 2023,2023,,,10,14,"Computational thinking is the third major mode of thinking in the age of artificial intelligence. Many primary and secondary schools adopt graphical programming as an important way for students' computational thinking development. However, elementary school students have less self-control in learning and are more dependent on teachers, so timely and effective teaching interaction is an important guarantee for the realization of the teaching goals of graphical programming. Through three rounds of action research, the essay investigated the impact of teaching interaction strategies on the development of students' computational thinking. The findings show that students are satisfied with the designed interaction strategies, and the interaction strategies can significantly improve students' computational thinking ability and level.",,979-8-3503-2572-0,10.1109/CSTE59648.2023.00009,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10261600,computational thinking;computer-assisted learning;graphical programing;teaching interaction,Education;Artificial intelligence;Programming profession,,,,14.0,IEEE,29 Sep 2023,,,IEEE,IEEE Conferences,8,6
Study on Teaching Programming in Adult Colleges Based on the Cultivation of Computational Thinking,J. Chen,"Jingan Branch Campus ShangHai Open University, Shanghai, China",2023 5th International Conference on Computer Science and Technologies in Education (CSTE),29 Sep 2023,2023,,,81,85,"Computational thinking is an important concept that is currently receiving widespread attention in the international computing community. Teaching programming is an effective way to develop students' computational thinking. Students in adult colleges and universities face the pressure of study and work, and there is a need to improve their computational thinking skills. In this paper, we design and develop a set of programming activities based on computational thinking development for adult college students, and study the changes in students' computational thinking before and after they participate in the activities. It provides a reference for frontline teachers and related researchers to design programming activities and conduct research in computational thinking.",,979-8-3503-2572-0,10.1109/CSTE59648.2023.00021,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10261627,computational thinking;programming;activity design,Education;Programming profession;Faces,,,,10.0,IEEE,29 Sep 2023,,,IEEE,IEEE Conferences,8,6
Exploring the Impact of the Learning Sequence of Computational Thinking and Programming on Learning Outcomes,C. -H. Lai; C. -H. Hsieh,"Department of Information and Computer Engineering, Chung Yuan Christian University, Taoyuan, Taiwan; Department of Information and Computer Engineering, Chung Yuan Christian University, Taoyuan, Taiwan",2023 IEEE 3rd International Conference on Social Sciences and Intelligence Management (SSIM),22 Mar 2024,2023,,,175,179,"The primary objective of this research was to investigate effective learning sequences starting with computational thinking, programming, or both. We experimented with and analyzed the learning sequence of students from the Department of Computer Engineering, Information Management, and Mechanical Engineering. The findings indicated that the students of the Department of Computer Engineering possessed prior experiences in programming or computational thinking. Their learning sequences limitedly impacted learning outcomes. Conversely, for the students of the Department of Information Management, learning computational thinking before programming did not result in better learning outcomes, emphasizing the need for coherence in courses. The students of the Department of Mechanical Engineering showed the practical value of computational thinking in non-IT disciplines, particularly in using specialized software such as MATLAB. For students with foundational knowledge, the learning sequence between learning computational thinking and programming was less significant. However, for beginners or those from non-IT backgrounds, effective learning required the coherence and integration of courses. Thus, it is required to maintain cross-course coherence and establish links between computational thinking and programming skills to offer a more in-depth learning experience.",,979-8-3503-2778-6,10.1109/SSIM59263.2023.10469197,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10469197,computational thinking;programming;learning sequence;course coherence;interdisciplinary application,Training;Systematics;Social sciences;Coherence;Programming;Software;Information management,,,,11.0,IEEE,22 Mar 2024,,,IEEE,IEEE Conferences,8,8
Research on Developing Computational Thinking of Middle School Students Based on Gamified Text Programming Teaching Activities,J. Liu; Y. Bai; X. Xia,"Key Laboratory of Child Development and Learning Science, Ministry of Education, Southeast University, Nanjing, China; Key Laboratory of Child Development and Learning Science, Ministry of Education, Southeast University, Nanjing, China; Key Laboratory of Child Development and Learning Science, Ministry of Education, Southeast University, Nanjing, China",2023 5th International Conference on Computer Science and Technologies in Education (CSTE),29 Sep 2023,2023,,,175,179,"With the coming of the digital intelligence era, contemporary middle school students should have the key literacy and ability to quickly adapt to the current social development. Computational thinking, as a critical problem-solving skill in the era of artificial intelligence, has also become a basic literacy for students to face the future. However, the traditional “duck and filler” teaching mode is ineffective in developing computational thinking skills, while the gamified learning approach allows learners to interact with games in an immersive way. Therefore, this study combines games and programming teaching, builds a teaching model of gamified text programming, and develops a series of programming courses. It can develop not only computational thinking skills and improve students' programming ability but also effectively avoid the limitations of traditional programming teaching.",,979-8-3503-2572-0,10.1109/CSTE59648.2023.00037,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10261572,computational thinking;gamified teaching;text programming;teaching model,Codes;Computational modeling;Education;Games;Digital intelligence;Problem-solving;Artificial intelligence,,1.0,,22.0,IEEE,29 Sep 2023,,,IEEE,IEEE Conferences,8,6
Design Thinking in App Inventor Game Design and Development: A Case Study,P. Chen; R. Huang,"Smart Learning Institute, Beijing Normal University, Beijing, China; Department of Educational Technology, Capital Normal University, Beijing, China",2017 IEEE 17th International Conference on Advanced Learning Technologies (ICALT),7 Aug 2017,2017,,,139,141,"Design thinking is considered as a creative, humancentred, participative, exploratory and problem-solving process that values different perspectives of a problem. In this study, we bring the design thinking in a curriculum framework of K-12 game creation by App Inventor which is currently popular block based programming environments for fostering Computational Thinking. In a case study on a middle-school students game creation course in Beijing, the students' creative thinking process and computational thinking skill are investigated in order to understand perceptions of App Inventor and physics cognitive knowledge involved in the game creation. The future work is to construct a framework of integrating the Design Thinking for cultivating K-12 students' computational thinking.",2161-377X,978-1-5386-3870-5,10.1109/ICALT.2017.161,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8001741,Design Thinking;App Inventor;Game Creation;Computational Thinking,Games;Programming profession;Computer science education;Physics;Conferences,,9.0,,32.0,IEEE,7 Aug 2017,,,IEEE,IEEE Conferences,8,6
Teaching Reform of Software Engineering Course Based on Computational Thinking,X. Dong; J. Jia,"Special Education College Beijing Union University, Beijing, China; Special Education College Beijing Union University, Beijing, China",2020 International Conference on Artificial Intelligence and Computer Engineering (ICAICE),1 Mar 2021,2020,,,399,402,"For students majored in computer science, the ability to have computational thinking is an essential skill. Facilitating computational thinking cannot only help students understand the professional knowledge and principles of computer, but also bring new ideas to addressing complex problems, therefore, many colleges and universities have carried out computer professional curriculum reform based on computational thinking. Due to the high degree of abstraction of computational thinking, traditional teaching methods will cause students to understand computational thinking only at the conceptual level, and cannot realize the flexible use of computational thinking concepts. This study takes the software engineering course as an example to explain how to integrate the concepts of computational thinking into the original courses. The goal is to enable students to understand software engineering contents problems from the perspective of problem-solving.",,978-1-7281-9146-1,10.1109/ICAICE51518.2020.00084,Beijing Union University; ,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9361128,Computational Thinking;Problem Solving;Software Engineering;Teaching Reform,Computer science;Software design;Education;Software;Problem-solving;Artificial intelligence;Software engineering,,1.0,,8.0,IEEE,1 Mar 2021,,,IEEE,IEEE Conferences,8,5
Automated Feedback in Software Engineering: Enhancing Computational Thinking Process,F. Parsa; A. A. A. Moghadam; T. Ashuri,"Department of Computer and Software Engineering, Faculty of Artificial Inteligence, Karaj Azad University, Karaj, Iran; Department of Robotics and Mechatronics Engineering, Southern Polytechnic College of Engineering and Engineering Technology, Kennesaw State University, Marietta, GA, USA; Southern Polytechnic College of Engineering and Engineering Technology, Kennesaw State University, Marietta, GA, USA",SoutheastCon 2024,24 Apr 2024,2024,,,1621,1626,"Computational thinking is the systematic approach of defining a problem and crafting its solution. It employs computer programming algorithms to address scientific, engineering, and mathematical challenges using programming languages. Feedback plays a pivotal role in the learning journey of computational thinking. It is widely recognized that offering timely feedback to students on their computational endeavors significantly contributes to their achievement and overall satisfaction with the course. This research explores the implementation of an automated feedback system designed to evaluate and offer early feedback on computer engineering projects. The aim is to integrate best practices and software tools related to computational thinking into the thinking and learning processes within an engineering curriculum. Preliminary findings suggest that the automated feedback system enhances students' computational skills and improves their performance in the course. We anticipate that the insights gained from this research will inform the enhancement of curricula and course evaluations across different computational thinking tasks, disciplines, and courses.",1558-058X,979-8-3503-1710-7,10.1109/SoutheastCon52093.2024.10500041,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10500041,Software Engineering;Computational Thinking;Automated Feedback System;Computer Programming,Computer languages;Systematics;Programming;Task analysis;Software tools;Best practices;Software engineering,,,,15.0,IEEE,24 Apr 2024,,,IEEE,IEEE Conferences,8,8
Impact of Teaching Approaches to Computational Thinking on High School Students: A Systematic Mapping,L. Ribeiro Silva; A. Pedro da Silva; A. Toda; S. Isotani,"Universidade de Sao Paulo, Sao Paulo, SÃ£o Paulo, BR; University of São Paulo (ICMC-USP), São Carlos, SP, Brazil; University of São Paulo (ICMC-USP), São Carlos, SP, Brazil; Univ. of Sao Paulo, Sao Carlos, Brazil",2018 IEEE 18th International Conference on Advanced Learning Technologies (ICALT),13 Aug 2018,2018,,,285,289,"The role of computing in society is fundamental for the political, economic and cultural development of countries, especially in a globalized context. Computational thinking is an extremely important skill in the education of young students, since the ability of intuitively abstracting information and knowledge promotes an expansion of the learning dimension. This study aims to gather approaches used for teaching computational thinking exclusively to high school students, highlighting their performance and motivation resulting from the applications of such approaches. In order to answer our research question, a systematic mapping of the analysis of 15 studies was conducted. The use of computer programming proved to be the most used way to disseminate computational thinking. The students who participated in approaches regarding the insertion of computational thinking in the classroom showed positive impact on the development of classroom activities, as well as motivation to learn.",2161-377X,978-1-5386-6049-2,10.1109/ICALT.2018.00072,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8433517,Computational Thinking;Approach;K-12,Education;Systematics;Programming profession;Databases;Tools;Robots,,5.0,,25.0,IEEE,13 Aug 2018,,,IEEE,IEEE Conferences,8,9
Students’ Engagement in Computational Thinking Skills Using A Game Based-Learning,R. D. Handayani; S. B. Prastowo; Jamalludin; Triyanto; M. A. Thohir,"Physics Education Department, University of Jember, Jember, Indonesia; Physics Education Department, University of Jember, Jember, Indonesia; Magister of Science Education, University of Jember, Jember, Indonesia; Civics Education Department, Sebelas Maret University, Surakarta, Indonesia; Faculty of Education Universitas Negeri Malang, Malang, Indonesia",2023 9th International Conference on Education and Technology (ICET),19 Feb 2024,2023,,,148,151,"This study aims to investigate students’ engagement in computational thinking skills through game-based learning in science classrooms. Data was gathered through observation and interviews with 30 secondary school students. Research data were analyzed qualitatively through six stages involving preparing and organizing data, exploring data, developing descriptions, representing results, interpreting findings, and validating the accuracy of findings. The study results show that game-based learning makes students engaged in computational thinking skills. Interaction with educational games trains students to find solutions more precisely and bravely in making decisions. Game-based learning can be a solution to introduce students’ computational thinking skills in a more enjoyable way. Teachers are expected to use this research to teach students computational thinking skills through game-based learning.",2770-4807,979-8-3503-5829-2,10.1109/ICET59790.2023.10435201,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10435201,computational thinking;game-based learning;student engagement,Education;Atmosphere;Games;Interviews,,1.0,,28.0,IEEE,19 Feb 2024,,,IEEE,IEEE Conferences,8,6
A Design and Development of Internet of Things (IoT) System and Learning Activity to Promote Computational Thinking,S. Sonsilphong; A. Sonsilphong; D. Hormdee; P. Sae-Joo,"Academic Affairs, Faculty of Medicine, Khon Kaen University, Khon Kaen, Thailand; Department of Electrical Engineering, Rajamangala University of Technology, Khon Kean, Thailand; Department of Computer Engineering, Faculty of Engineering, Khon Kaen University, Khon Kaen, Thailand; Computer Education Program, Faculty of Education, Khon Kaen University, KhonKaen, Thailand",2022 7th International STEM Education Conference (iSTEM-Ed),25 Oct 2022,2022,,,1,4,"Computational Thinking (CT), problem-solving and programming skills are important for the students with major of computer education of higher levels education which related to the computing science contents. The instructions must provide the basic contents and learning activities, including Internet of Things (IoT), big-data and programming, as well as Artificial Intelligence (AI) and machine learning. However, these courses present learning difficulties based upon the students' individual skills. Development and integration of the IoT system would offer supporting tools for learning activities and improve the students' computational thinking, problem-solving, and programming skills. This paper presents the design and development of IoT system to support students' computational thinking, problem-solving, and programming skills training through block-based programming and integrated platforms. The IoT system comprises three layers (hardware, middleware, and applications), using existing platforms and devices as well as newly developed. To validate the viability of the proposed pipelined realization, the developed systems were implemented for higher education level students of computer education program. The students' computational-thinking, problem-solving, and programming skills were significantly improved through the proposed learning system throughout the course.",,978-1-6654-9821-0,10.1109/iSTEM-Ed55321.2022.9920899,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9920899,computing skills;computational thinking;problem solving;Internet of Things;computer programming,Training;Learning systems;Education;Machine learning;Learning (artificial intelligence);Hardware;Internet of Things,,1.0,,8.0,IEEE,25 Oct 2022,,,IEEE,IEEE Conferences,8,9
Research on the Application of Gamification Programming Teaching for High School Students’ Computational Thinking Development,Z. Qu; J. Liu; L. Che; Y. Su; W. Zhang,"College of Computer and Information Technology, Mudanjiang Normal University, Mudanjiang, Heilongjiang, China; College of Computer and Information Technology, Mudanjiang Normal University, Mudanjiang, Heilongjiang, China; College of Computer and Information Technology, Mudanjiang Normal University, Mudanjiang, Heilongjiang, China; College of Computer and Information Technology, Mudanjiang Normal University, Mudanjiang, Heilongjiang, China; College of Computer and Information Technology, Mudanjiang Normal University, Mudanjiang, Heilongjiang, China",2023 IEEE 12th International Conference on Educational and Information Technology (ICEIT),28 Apr 2023,2023,,,144,149,"Computational thinking, as one of the core literacies of the Chinese IT courses, is an important area of IT education in primary and secondary schools. This research aims to improve the level of computational thinking of high school students by using Minecraft as a tool for Python gamified programming teaching design and analyzing the effectiveness of 60 high school students’ improvement in algorithmic thinking, problem solving, creativity, critical thinking, and collaboration after the teaching practice. The research results show that gamified programming teaching can significantly improve high school students’ computational thinking, providing a new teaching approach and ideas for high school IT education and computational thinking development.",,978-1-6654-7551-8,10.1109/ICEIT57125.2023.10107843,Mudanjiang Normal University; Mudanjiang Normal University; ,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10107843,game-based learning;gamification programming;computational thinking;high school information technology,Education;Urban areas;Collaboration;Data models;Problem-solving;Information technology;Task analysis,,,,11.0,IEEE,28 Apr 2023,,,IEEE,IEEE Conferences,8,6
Teaching and research on assembly language for computational thinking,L. -j. Yin; R. -x. Zuo; Y. Zhao,"School of Information Engineering, Shijiazhuang University of Economics, Shijiazhuang, China; School of Information Engineering, Shijiazhuang University of Economics, Shijiazhuang, China; School of Information Engineering, Shijiazhuang University of Economics, Shijiazhuang, China","2011 International Conference on Consumer Electronics, Communications and Networks (CECNet)",16 May 2011,2011,,,3649,3652,"Assembly language is a foundation courses for science and technology of computers. Computational thinking emphasizes just like computer scientists thinking. It is one of basic skills to solve problems with the computer technology. How to develop student's computational thinking is an urgent question in computer education. This paper analyzes the connotation of computational thinking, the embodiment of ability in assembly language and the process of formation; then proposes teaching programs of assembly language for computational thinking. In 2009 and 2010, cross-teaching experiments have been adopted between teachers and students. The feedback information from students shows that the introduction of computational thinking computing can help students to improve the professional ability. The teaching reform has achieved good results.",,978-1-61284-459-6,10.1109/CECNET.2011.5769498,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5769498,assembly language;computational thinking;teaching;model,Education;Computer science;Assembly;Computers;Biological system modeling;Economics;Computational modeling,,1.0,,,IEEE,16 May 2011,,,IEEE,IEEE Conferences,8,9
Training Methods of Computational Thinking for Medical Students in Big Data Age,J. Si; H. Feng; Z. Niu; Y. Bian; Y. Fu; H. Guo; Z. Su; W. Deng; X. Li,"School of Basic Medical Sciences, Tianjin Medical University, China; School of Medical Humanities, Tianjin Medical University, China; School of Foreign Studies, Xi’an Jiaotong University, China; School of Medical Humanities, Tianjin Medical University, China; Chinese materia medica, Shenyang pharmaceutical university, China; School of Basic Medical Sciences, Tianjin Medical University, China; School of Medical Humanities, Tianjin Medical University, China; School of Basic Medical Sciences, Tianjin Medical University, China; School of Basic Medical Sciences, Tianjin Medical University, China",2021 16th International Conference on Computer Science & Education (ICCSE),21 Oct 2021,2021,,,13,20,"The era of big data witnesses that ‘computing’ has become an indispensable tool for medical development in many aspects of medicine domain. The ability of computational thinking is of great significance to medical students engaging in basic research and clinical diagnosis and treatment in the future. However, medical students are lack of this strategy in dealing with problems at present. Meanwhile, there is also a problem of ‘insufficient skills and no training’ in computer learning. In this article, we recommend training students’ computational thinking from three aspects. First, students can learn the basic concepts of computational thinking and different thinking modes of computer scientists through computer courses in both theory and practice in order to train their computational thinking. Second, in the process of thinking, students can directly carry out divergent thinking, logical integration, and practice the thinking methods of scientists such as abstraction and simplification through the mind maps produced by IMindMap software. Third, during the practice of modeling and programming, after using mind maps to make the problem abstract and sort out the content of the creation to draw a flowchart, students start modeling and systematic design through Scratch software. At last, under the help of MATLAB, some specific medical cases enable students to apply computational thinking to practice comprehensively. Our practice in class shows that these training methods has positive influence in improving students computational thinking.",2473-9464,978-1-6654-1468-5,10.1109/ICCSE51940.2021.9569311,National Natural Science Foundation of China; ,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9569311,Medical students;Computational thinking;mind maps;MATLAB,Training;Flowcharts;Systematics;Computational modeling;Big Data;Tools;Software,,,,30.0,IEEE,21 Oct 2021,,,IEEE,IEEE Conferences,8,7
The Development of Students' Computational Thinking Practices in AI Course Using the Game-Based Learning: A Case Study,J. Ma; Y. Zhang; H. Bin; K. Wang; J. Liu; H. Gao,"Faculty of Artificial Intelligence in Education, Central China Normal University, Wuhan, China; Faculty of Artificial Intelligence in Education, Central China Normal University, Wuhan, China; Faculty of Artificial Intelligence in Education, Central China Normal University, Wuhan, China; Faculty of Artificial Intelligence in Education, Central China Normal University, Wuhan, China; Faculty of Artificial Intelligence in Education, Central China Normal University, Wuhan, China; Faculty of Artificial Intelligence in Education, Central China Normal University, Wuhan, China",2022 International Symposium on Educational Technology (ISET),29 Aug 2022,2022,,,273,277,"Promoting the computational thinking of the K12 students through artificial intelligence education is reflected in curriculum standards and academic research. Game-based learning promotes the learning interest and motivation, helps students reinforce computational thinking practices. Based on the input-process-result (IPO) game-based learning model, this study integrated the artificial intelligence instructional content, game-based learning, and the core elements of computational thinking practice to design game-based learning activities that was suitable for promoting computational thinking practices in artificial intelligence courses. In this research, the artificial intelligence course “Challenging Tic-Tac-Toe” was conduct in senior high school. The results showed that the game-based learning in artificial intelligence courses could help students to master artificial intelligence subject knowledge, significantly improved the computational thinking practices, enhanced learning interest, motivation, self-confidence, and reduce cognitive load. Thus, this study provides additional evidence that using the game-based learning strategies is an effective learning method that improves both learning performance and computational thinking practices.",2766-2144,978-1-6654-8467-1,10.1109/ISET55194.2022.00065,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9867127,Computational thinking practices;Artificial intelligence course;Game-based learning;IPO game-based learning model,Learning systems;Computational modeling;Learning (artificial intelligence);Educational technology;Artificial intelligence;Standards,,5.0,,33.0,IEEE,29 Aug 2022,,,IEEE,IEEE Conferences,8,6
Development of CT Using Need Assessment and Gamification: A Systematic Review,A. Aroonsiwagool; S. Tuntiwongwanich,"School of Industrial Education and Technology, King Mongkut's Institute of Technology Ladkrabang, Bangkok, Thailand; School of Industrial Education and Technology, King Mongkut's Institute of Technology Ladkrabang, Bangkok, Thailand",2021 2nd SEA-STEM International Conference (SEA-STEM),10 Jan 2022,2021,,,146,150,"This study originates from the content synthesis of studies on computational thinking, need assessment, gamification, and computational thinking with coding from Thai and international scholarly articles published in accredited databases. Then, the synthesis results were integrated into the development of computational thinking through gamification and programming knowledge to improve the efficacy of computational learning. The process commenced with an analysis of the learners' needs obtained through the questionnaires concerning computational thinking. Data analysis illuminated the learners' levels of computational thinking as well as a fundamental understanding of what the learners need to be taught or what areas of skills each learner. With regards to this, conventional teaching approaches may not serve best to transmit the relevant knowledge which may subsequently induce unfavorable attitudes toward computational thinking. With the data elicited through the need assessment, instructors will have a clear direction as to how the pedagogical process should be designed to directly address the needs in each of the computational thinking components. In general, each component of them is rather complex, so the researcher incorporated gamification theory-based learning defined by its enjoyable game mechanisms and challenging nature which makes the coding lesson fun with block programming enabling learners to proficiently grasp the concept of computational thinking.",,978-1-6654-1680-1,10.1109/SEA-STEM53614.2021.9668107,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9668107,computational thinking;need assessment;gamification;computational thinking with coding,Systematics;Navigation;Education;Games;Programming;Encoding;Pattern recognition,,1.0,,31.0,IEEE,10 Jan 2022,,,IEEE,IEEE Conferences,8,7
Teaching computational thinking to non-computing majors using spreadsheet functions,K. -C. Yeh; Y. Xie; F. Ke,"Department of Computer Science and Engineering, The Pennsylvania State University, USA; Department of Educational Leadership and Instructional Design, Idaho State University, USA; Department of Educational Psychology and Learning Systems, The Florida State University, USA",2011 Frontiers in Education Conference (FIE),2 Feb 2012,2011,,,F3J-1,F3J-5,"Recently, higher education has seen an increasing emphasis on the prominent role of computational thinking in all disciplines. Computational thinking is advocated as not only a fundamental skill or concept in computer science but also a core competency for all disciplines. Teaching students in non-computer science majors computing thinking is challenging because students do not have experts' mental models. This study investigates the knowledge gap that non-computing major college students (n=126) possess about computational thinking in an introductory MS Excel course by measuring their performance using spreadsheet functions in three categories: recall, application, and problem solving. The empirical result, analyzed using ANOVA, shows that students can recall the meaning of those functions but seem to have trouble using them correctly and precisely (cued or uncued). Students' test results suggest the following issues: (1) problems with understanding the data type, (2) failure in translating problems to productive representations using spreadsheet functions, and (3) inadequate stipulation of the computational representations in precise forms. Addressing these problems early and explicitly in future classes could improve the education of computational thinking and alleviate difficulties students may experience in using computational thinking in learning and problem solving.",2377-634X,978-1-61284-469-5,10.1109/FIE.2011.6142980,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6142980,Computational Thinking;Computer Science Education;Spreadsheet Functions;Problem Solving,Problem-solving;Computer science;Computers;Conferences;Educational institutions;Instruments,,10.0,,9.0,IEEE,2 Feb 2012,,,IEEE,IEEE Conferences,8,8
How can a simulation game support the development of computational problem-solving strategies?,N. Pellas; S. Vosinakis,"Dept. of Product & Systems Design Engineering, University of the Aegean, Syros, Greece; Dept. of Product & Systems Design Engineering, University of the Aegean, Syros, Greece",2017 IEEE Global Engineering Education Conference (EDUCON),8 Jun 2017,2017,,,1129,1136,"Game-based learning using interactive environments to impart theoretical and applied knowledge for introductory programming courses is divided in two popular approaches: “game making” and “game playing”. Various studies have been conducted following greatly the former approach in secondary and tertiary education with controversial results. However, there has been relatively little research shown about how game playing can be associated with the development of computational thinking and how fundamental programming concepts can be supported by playing games. This work investigates how a simulation game should be designed to support the development of computational problem-solving strategies through the medium of learning fundamental computer science concepts, by proposing a theoretical game playing framework.",2165-9567,978-1-5090-5467-1,10.1109/EDUCON.2017.7942991,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7942991,computing education;computational problem-solving;game-based learning;Open Sim;Scratch4SL,Games;Problem-solving;Programming profession;Three-dimensional displays;Computational modeling;Visualization,,7.0,,25.0,IEEE,8 Jun 2017,,,IEEE,IEEE Conferences,8,7
Exploring Different Unplugged Game-like Activities for Teaching Computational Thinking,T. Jagušt; A. S. Krzic; G. Gledec; M. Grgić; I. Bojic,"Faculty of Electrical Engineering and Computing, Unska 3, University of Zagreb, Zagreb, Croatia; Faculty of Electrical Engineering and Computing, Unska 3, University of Zagreb, Zagreb, Croatia; Faculty of Electrical Engineering and Computing, Unska 3, University of Zagreb, Zagreb, Croatia; Faculty of Electrical Engineering and Computing, Unska 3, University of Zagreb, Zagreb, Croatia; SENSEable City Laboratory, Singapore-MIT Alliance for Research and Technology, 1 Create Way, Singapore, Singapore",2018 IEEE Frontiers in Education Conference (FIE),7 Mar 2019,2018,,,1,5,"For a number of years, various games have been used as an educational tool at different academic levels, especially in primary education. However, only recently games that teach coding and algorithmic thinking or even broader, computational thinking, emerged. Initiatives like Hour of Code and similar online activities or block-based programming games popularized the field, while at the same time, projects like CSUnplugged showed that the “idea of programming” can be learned even without using the computer. In this paper, we present our experience so far in creating and implementing different unplugged activities that teach students of different age levels, from early primary school to the university students, the simple programming concepts and algorithms. As a part of Science, Technology, Engineering, Mathematics and Computer Science (STEM-C) outreach program named SUZA - From school to science and the academic community at University of Zagreb Faculty of Electrical Engineering and Computing, Croatia, we conducted a number of game-like activities based on graph paper programming, block-based programming and using the existing board games. Although this is a work in progress project, the participant reactions so far, collected through interviews and questionnaires, indicated that the conducted activities were well accepted by students and their teachers. We also received a number of useful feedback comments and proposals, such as to expand the activities to include the homework part, or to make them more physical and relocate them outdoors.",2377-634X,978-1-5386-1174-6,10.1109/FIE.2018.8659077,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8659077,STEM-C;computational thinking;algorithmic thinking;unplugged programming;education,Games;Programming profession;Conferences;Education;Shape;Electrical engineering,,11.0,,17.0,IEEE,7 Mar 2019,,,IEEE,IEEE Conferences,8,7
Computational Thinking Growth During a First-Year Engineering Course,N. V. Mendoza Diaz; R. Meier; D. A. Trytten; S. Yoon Yoon,"Dept. of Educational Administration and Human, Resource Development Texas A&M University, College Station, TX, USA; Dept. of Educational Administration and Human, Resource Development Texas A&M University, College Station, TX, USA; Dept. of Educational Administration and Human, Resource Development Texas A&M University, College Station, TX, USA; Dept. of Educational Administration and Human, Resource Development Texas A&M University, College Station, TX, USA",2020 IEEE Frontiers in Education Conference (FIE),4 Dec 2020,2020,,,1,7,"This full research-track paper demonstrates growth in computational thinking in a cohort of engineering students completing their first course in engineering at a large Southwestern university in the United States. Computational thinking has been acknowledged as a key aspect of engineering education and an intrinsic part of multiple ABET outcomes. However, computing is an area where some students have more privileges (e.g. access and exposure to meaningful use of computers) than others. Integrating computing into engineering, especially early in the curriculum, may exacerbate existing experiential disadvantages students from excluded social identities experience. Most introductory engineering programs have a component of programming and/or computational thinking. A comprehensive literature review showed that no existing computational thinking framework fully met the needs of students and professors in engineering and computer science. As a result, this team created the Engineering Computational Thinking Diagnostic (ECTD). This diagnostic was assessed and improved during the 2019-2020 academic year. Data was collected from a cohort in a first-year engineering course that included topics in mathematics, engineering problem solving, and computation. Pre- and post-test data analysis with 62 participants documents statistically significant student growth in computational thinking in this course. Significant differences were not found by gender or a limited racially-based analysis. This diagnostic is of interest and relevance to all institutions providing engineering and computing programs. The short-term impact of this research includes an innovative approach to gauge student abilities in computational thinking early in a course in order to add appropriate intervention activities into lesson plans. The long-term impact is the creation of a measurement of student learning of computational thinking in engineering for courses and programs that wish to develop this important skill in their students.",2377-634X,978-1-7281-8961-1,10.1109/FIE44824.2020.9274250,National Science Foundation; ,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9274250,computational thinking;first-year engineering education;learning and teaching effectiveness;assessment metrics,Programming profession;Organizations;Engineering students;Task analysis;Computational modeling;Tools;Pattern matching,,6.0,,39.0,IEEE,4 Dec 2020,,,IEEE,IEEE Conferences,8,8
Engineering Human Body for Systematic and Computational Thinking,C. Zhu; J. E. Ahn; L. Cui; R. Hare; Y. Tang,"dept. of Electr. & Comput. Engineering, Rowan University, Glassboro, NJ, USA; dept. of Civ. & Environ. Engineering, Rowan University, Glassboro, NJ, USA; dept. of Electr. & Comput. Engineering, Rowan University, Glassboro, NJ, USA; dept. of Electr. & Comput. Engineering, Rowan University, Glassboro, NJ, USA; dept. of Electr. & Comput. Engineering, Rowan University, Glassboro, NJ, USA",2023 IEEE Frontiers in Education Conference (FIE),5 Jan 2024,2023,,,1,5,"This Research to Practice Work-in-Progress paper discusses a next-generation learning system for K-12 students to educate them on scientific concepts surrounding the human body. Specifically, our gamified learning system is designed to make learning more fun, engaging, and effective through game and experiment elements that align with science and math learning standards. It will also increase systematic problem-solving and algorithmic reasoning for K-12 students. Since the human body can be thought of as a combination of interacting systems, the game also introduces students to computational thinking by introducing internal body functions. To achieve these goals, this project has two components. First, an educational virtual reality game will be built according to the natural human body structure. During the game process, students will experience the same as the human body functions, travel along the blood circulation, help with the heartbeat, and participate in oxygen exchange. While students are playing the game, our gamified adaptive learning system tracks and controls the student's learning progress. As the AI component collects student data and uses this information, our system adjusts game content and addresses possible learner issues to refine the learning curriculum for a faster and more effective learning experience. Second, a series of hands-on activities will be conducted based on the functions of the human body (e.g., developing an artificial heart and experiencing how the heart works). Through this project, an attractive and efficient next-generation learning system will be developed and used to expose K-12 students to this learning system. The education of students will be accomplished in different dimensions through games and hands-on practice, respectively. Additionally, compared to traditional learning methods, our learning system not only increases students' interest in learning but also makes it more personalized compared to the conventional learning process. Likewise, we will refer to the results of self-efficacy surveys administered to students and teachers separately to test their perceptions of their abilities and the new system.",2377-634X,979-8-3503-3642-9,10.1109/FIE58773.2023.10342946,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10342946,Gamification;Educational Software;Learning Technology;Computational Thinking;Systematic Thinking,Learning systems;Heart;Systematics;Games;Virtual reality;Cognition;Teamwork,,,,15.0,IEEE,5 Jan 2024,,,IEEE,IEEE Conferences,8,8
Teaching Computational Thinking and Spatial Visualization in K-12 with 3D Weather Visualizations,M. J. Mohammadi-Aragh; Y. Sun; J. L. Dyer; J. G. Harris; C. A. Robinson; M. Bai; J. K. Kavanagh; K. E. Ball,"Dept. of Electrical and Computer Engineering, Mississippi State University Mississippi State, MS, USA; Dept. of Instructional Systems and Workforce Development, Mississippi State University Mississippi State, MS, USA; Dept. of Geosciences, Mississippi State University Mississippi State, MS, USA; Northern Gulf Institute, Mississippi State University Mississippi State, MS, USA; Dept. of Electrical and Computer Engineering, Mississippi State University Mississippi State, MS, USA; Dept. of Instructional Systems and Workforce Development, Mississippi State University Mississippi State, MS, USA; Dept. of Geosciences, Mississippi State University Mississippi State, MS, USA; Northern Gulf Institute, Mississippi State University Mississippi State, MS, USA",2022 IEEE Frontiers in Education Conference (FIE),29 Nov 2022,2022,,,1,6,"This Innovative Practice Full Paper presents a K-12 teacher training workshop for computational thinking instruction. Computational thinking refers to a set of skills that are necessary for success in engineering and science careers. Teaching computational thinking skills prior to university-level enrollment helps students be more successful in their degree programs. Our project serves as an attempt to innovate science education by designing and testing data-driven, scientific inquiry experiences that integrate teaching and learning of atmospheric science with computational thinking and practices in authentic, innovative, and effective ways. In this paper, we describe our design process for developing authentic computational thinking and spatial visualization modules for the two-week computational thinking professional development that uses 3D weather visualizations to train K-12 teachers in eleven computational thinking and spatial visualization skills.",2377-634X,978-1-6654-6244-0,10.1109/FIE56618.2022.9962465,National Science Foundation; ,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9962465,computational thinking;spatial visualization;K-12,Training;Three-dimensional displays;Data analysis;Engineering profession;Conferences;Education;Data visualization,,,,21.0,IEEE,29 Nov 2022,,,IEEE,IEEE Conferences,8,8
Development of Computational Story for Teaching Algorithm and Programming,L. S. Riza; I. A. Aryani; Y. Wihardi; E. F. Rahman; Herbert; Haviluddin,"Department of Computer Science Education, Universitas Pendidikan Indonesia, Bandung, Indonesia; Department of Computer Science Education, Universitas Pendidikan Indonesia, Bandung, Indonesia; Department of Computer Science Education, Universitas Pendidikan Indonesia, Bandung, Indonesia; Department of Computer Science Education, Universitas Pendidikan Indonesia, Bandung, Indonesia; Department of Computer Science Education, Universitas Pendidikan Indonesia, Bandung, Indonesia; Faculty of Computer Science and Information Technology, Universitas Mulawarman, Samarinda, Indonesia",2018 2nd East Indonesia Conference on Computer and Information Technology (EIConCIT),24 Oct 2019,2018,,,326,329,"Algorithms and programming is a basic course in the department of computer science that teaches about the logic of thinking and basic programming techniques. However, it is known that students are difficult to understand it. Therefore, this study focuses on developing an application, called computational story, to teach the subject of algorithm and programming with the problem-posing approach and story problems. To achieve this goal, a model that considers the following aspects: basic structure in programming in C language, case studies, and choice of answer categories, is built. Then, an experimental research was conducted in a school to be seen to improve the students' understanding of algorithm and programming. The results obtained indicate that there is an increase in students' understanding, and this application can be used also to assess the critical thinking level of students in the future work.",,978-1-5386-8050-6,10.1109/EIConCIT.2018.8878556,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8878556,problem posing;learning model;critical thinking;computational story,Computational modeling;Programming profession;Graphical user interfaces;Information technology;Computer science education,,,,15.0,IEEE,24 Oct 2019,,,IEEE,IEEE Conferences,8,9
Enhancing Confidence in Using Computational Thinking Skills via Playing a Serious Game: A Case Study to Increase Motivation in Learning Computer Programming,C. Kazimoglu,"Faculty of Engineering, Cyprus International University, Nicosia, Cyprus",IEEE Access,17 Dec 2020,2020,8.0,,221831,221851,"Computer Science (CS) is a profession that positively impacts every single area of society without which today's world would come to a complete halt. Yet, there is a consensus that CS has serious conundrums particularly in attracting students, low motivation for learning computer programming and developing computational thinking (CT) skills. New motivational methods are needed to take the attention of students and adapt to their learning patterns as how people learn have changed drastically over the last two decades. To address these issues, video games and video game-based tools are proposed as a primary approach for motivating and supporting students in developing their skills in CT and support their learning of introductory programming. This research is concerned with the capture of statistical evidence on the educational effectiveness of playing a serious game specifically designed to enhance the development of CT skills to facilitate learning introductory computer programming. A total of 190 students were invited to participate in a quasi-experimental pre-post study for the purpose of analyzing the impact of an adhoc game on students' confidence in learning programming constructs and using their skills in CT. All students were studying a CS degree at the time and they were all registered to a first-year computer programming course. 151 out of 190 students successfully completed the study and the findings suggest that a) the intrinsic motivation to learn programming; b) students' perception of their knowledge and their tangible knowledge in key programming constructs (i.e. programming sequence, methods, decision making and loops); and c) students' confidence in using their CT skills were all statistically and significantly improved after playing the game. Additionally, students perceived computer programming significantly less difficult in their post study responses when compared to their pre study responses.",2169-3536,,10.1109/ACCESS.2020.3043278,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9286386,Computational thinking;serious games;computer programming;video game design;game-based learning;gamification,Programming profession;Games;Visualization;Tools;Syntactics;Education;Computer languages,,32.0,,98.0,CCBY,8 Dec 2020,,,IEEE,IEEE Journals,8,8
A Machine Learning-Based Adaptive Feedback System to Enhance Programming Skill Using Computational Thinking,M. Kaleem; M. A. Hassan; S. K. Khurshid,"Department of Computer Science, University of Engineering and Technology at Lahore, Lahore, Pakistan; Department of Computer Science, University of Engineering and Technology at Lahore, Lahore, Pakistan; Department of Computer Science, University of Engineering and Technology at Lahore, Lahore, Pakistan",IEEE Access,2 May 2024,2024,12.0,,59431,59440,"The solution of a typical programming task involves algorithmic thinking, pattern recognition, decomposition, and abstraction skills. These skills are basic pillars of Computational thinking (CT) and are essential for a computer programmer. Therefore, a programming teacher needs to take these skills into account for the evaluation of students. Existing methods for improving programming competency don’t consider the Computational Thinking of students and perform grading of students without taking these skills into account. Due to this limitation, deficiencies of these skills in students remain unrevealed, posing difficulties for educators to provide need-oriented feedback. The performance of programming students is thus hindered by a lack of interventions. This study proposes a method to evaluate programming students in terms of CT skill components and group them based on their skill set. In this study, 780 students of object-oriented programming (OOP) class were given programming assignments for assessment of programming competencies. These students were then given small programming tasks requiring different computational thinking skill components for their solutions. A machine learning approach was used to perform grouping of these students based on their scores. Six groups of programming students, each having its own set of skill deficiencies, were identified as a result of clustering. One of the groups had an empty set of skill deficiencies and consisted of students proficient in programming. Each of the other five groups had a non-empty set of skill deficiencies and comprised non-proficient programming students. A group-specific skill development plan was built for the groups having skill deficiencies. It was found that such feedback was very effective and improved the CT skill deficiencies of 82% of students.",2169-3536,,10.1109/ACCESS.2024.3391873,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10506466,Computational thinking assessment;feedback;K-means clustering;programming,Programming;Programming profession;Codes;Task analysis;Source coding;Clustering algorithms;Feedback;Cognitive systems;Object oriented programming;Machine learning;Education;Performance evaluation,,1.0,,33.0,CCBYNCND,22 Apr 2024,,,IEEE,IEEE Journals,8,6
Teaching future teachers to code — Programming and computational thinking for teacher students,E. Kaila; M. -J. Laakso; E. Kurvinen,"Department of Future Technologies, University of Turku, Turku, Finland; Department of Future Technologies, University of Turku, Turku, Finland; Department of Future Technologies, University of Turku, Turku, Finland","2018 41st International Convention on Information and Communication Technology, Electronics and Microelectronics (MIPRO)",2 Jul 2018,2018,,,677,682,"Programming is one of the key assets in the modern society. In addition to teaching programming to future programmers, it has become more and more important to teach it alongside computational thinking to all students. We designed and implemented a programming course aimed for teacher students at our university. The goal of the course was to teach programming, computational thinking and the methods and tools used in programming education. The course was divided into two parts: first, the students were taught basic programming skills by utilizing tutorial-based learning with automatically assessed electronic exercises and play-based programming tasks. In the second part, the students utilized the acquired skills by teaching programming integrated into mathematics to children at elementary school level. The students worked really hard throughout the course, completing more than 90 % of all tasks in average. Moreover, the feedback from the tutorial sessions and the practice lessons at schools was mainly positive.",,978-953-233-095-3,10.23919/MIPRO.2018.8400127,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8400127,programming;computational thinking;teacher education;teacher students,Programming profession;Tutorials;Tools;Task analysis;Mathematics,,5.0,,22.0,,2 Jul 2018,,,IEEE,IEEE Conferences,8,7
"Blended Learning of ""Data Structure"" Course Based on Computational Thinking",Y. Tang; W. Chen; Z. Li; L. Shi; Y. Wu,"Command & Control Engineering College, Army Engineering University of PLA, Nanjing; Command & Control Engineering College, Army Engineering University of PLA, Nanjing; Command & Control Engineering College, Army Engineering University of PLA, Nanjing; Command & Control Engineering College, Army Engineering University of PLA, Nanjing; Command & Control Engineering College, Army Engineering University of PLA, Nanjing",2018 9th International Conference on Information Technology in Medicine and Education (ITME),27 Dec 2018,2018,,,403,406,"With the rapid development of information and educational technology, computational thinking has become one of the basic qualities and abilities that all students should possess. Based on the ""data structure"" course, this paper adopts blended learning based on MOOC/SPOC to improve the students' ability of computational thinking, improve the level of students' programming and solve practical problems. Practice has proved that they are effective methods in the ""data structure"" teaching.",2474-3828,978-1-5386-7744-5,10.1109/ITME.2018.00096,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8589328,computational thinking;data structure;blended learning;practice teaching,Education;Handheld computers;Information technology;Data structures,,4.0,,7.0,IEEE,27 Dec 2018,,,IEEE,IEEE Conferences,8,5
The Construction of Project-Based Learning Model Based on Design Thinking,L. Honglin; N. Yifan,"Northwest Normal University, Lanzhou, China; Northwest Normal University, Lanzhou, China",2022 4th International Conference on Computer Science and Technologies in Education (CSTE),15 Dec 2022,2022,,,173,177,"Project-based learning is a new student-centered teaching method, which can effectively cultivate learners' innovation ability and problem-solving ability. As a creative way of thinking to solve problems in the real environment, design thinking can be well integrated into project-based learning. This paper analyzes the internal relationship between design thinking and project-based learning, constructs the project-based learning model based on design thinking according to the process model of design thinking and the relevant theories of project-based learning, and expounds the development of relevant teaching in detail.",,978-1-6654-8188-5,10.1109/CSTE55932.2022.00038,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9973101,design thinking;project-based learning;implementation of project activities;teaching model,Computer science;Analytical models;Technological innovation;Computational modeling;Education;Problem-solving,,,,10.0,IEEE,15 Dec 2022,,,IEEE,IEEE Conferences,8,5
PBL Teaching with Design Thinking: Construction and Case Study of Programming Teaching Model in High School,C. Yang; W. Lv; W. Zhang,"Faculty of Education, Shaanxi Normal University, Xi'an, China; Faculty of Education, Shaanxi Normal University, Xi'an, China; Faculty of Education, Shaanxi Normal University, Xi'an, China",2022 4th International Conference on Computer Science and Technologies in Education (CSTE),15 Dec 2022,2022,,,69,76,"Programming education is a crucial part of school education and an important way to effectively enhance learners' learning abilities. However, current programming education in secondary schools is not as effective as it could be in concrete implementation. Project-based learning is a possible path for programming education, but it is still difficult to achieve the goal of cultivating innovative talents by project-based learning alone. Therefore, in this paper, we integrate design thinking into project-based learning, firstly, we analyze the connotation of design thinking and explain the necessity of integrating design thinking into project-based learning; secondly, we construct a new model and practice process framework of secondary school programming PBL teaching integrating design thinking based on the general process of project-based learning and the basic model of design thinking, and explain the connotation. Finally, a case study of “Python programming” in the new version of high school IT textbook is conducted to provide reference for the practice of secondary school programming education.",,978-1-6654-8188-5,10.1109/CSTE55932.2022.00019,Fundamental Research Funds For the Central Universities(grant numbers:2020TS083); ,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9973148,design thinking;project-based learning;secondary school programming;model construction;curriculum case study,Analytical models;Computational modeling;Education;Reflection;Problem-solving;Programming profession;Python,,,,28.0,IEEE,15 Dec 2022,,,IEEE,IEEE Conferences,8,6
Web Systems for the Development of Computational Thinking in Software Engineering Students: A Systematic Literature Review,D. Pale-Parra; C. Pérez-Salazar; Á. J. Sánchez-García; J. O. Ocharán-Hernández,"Facultad de Estadística e Informática, Universidad Veracruzana, Xalapa, México; Facultad de Estadística e Informática, Universidad Veracruzana, Xalapa, México; Facultad de Estadística e Informática, Universidad Veracruzana, Xalapa, México; Facultad de Estadística e Informática, Universidad Veracruzana, Xalapa, México",2023 11th International Conference in Software Engineering Research and Innovation (CONISOFT),27 Jun 2024,2023,,,132,139,"Many undergraduate students in software engineering have trouble developing computational thinking. Several tools have been reported in the literature to support the development of computational thinking. This paper reports a Systematic Literature Review to present the characteristics that have made successful web systems that support the development of computational thinking in recent years and the reported limitations. Eighteen primary studies were selected where the strategies used are usually learning through lessons, practicing with exercises, working through games, and using feedback. The systems found have been used at different elementary, middle, high school, and bachelor's degree levels. Finally, the main limitations reported in using these systems were mainly the difficulty of the topics, the previous knowledge that the students should have, the attitude that the students showed and the lack of motivation. Finally, we make some recommendations to software engineering curriculum planners and programming teachers about systems for developing computational thinking.",,979-8-3503-2883-7,10.1109/CONISOFT58849.2023.00026,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10568269,Computational thinking;web system;Learning;Software Engineering;students,Technological innovation;Systematics;Bibliographies;Games;Programming;Software engineering,,,,29.0,IEEE,27 Jun 2024,,,IEEE,IEEE Conferences,8,7
An Effective Approach to Teach an Introductory Computer Science Course with Computational Thinking and Flow-Chart Based Visual Programming,M. M. Rahman; M. H. Sharker; R. Paudel,"Computer Science Department, Morgan State University, Baltimore, Maryland, USA; Computer Science Department, Morgan State University, Baltimore, Maryland, USA; Computer Science Department, Morgan State University, Baltimore, Maryland, USA",2020 IEEE Frontiers in Education Conference (FIE),4 Dec 2020,2020,,,1,7,"This Research to Practice Full Paper presents our experience of positive outcomes with increased motivation and retention in teaching an introductory Computer Science course with Python programming. Without reinventing the wheel, we infused few well established pedagogies by integrating and evaluating Computational Thinking (CT) skills in a meaningful way. We integrated CT with existing curriculum alongside programming and teaching general problem-solving techniques with a flowchart-based programming environment and without using specific programming concepts or languages at the beginning. Our aim here is not only to teach a programming language per se, but also to teach, at the beginning, the different ways of problem solving, logical reasoning, algorithm design, and programming constructs with minimal or no emphasis on syntax. A positive learning experience is successfully developed for our students by using appropriate pedagogies and strategies. To evaluate the impact of this infusion, a pre- and post-survey as well as a pre- and post-CT test were conducted on student cohort in different sections. The statistical analysis of the survey and test results show evidence of improvement in student's problem solving and coding skills as well as increase in motivation towards programming.",2377-634X,978-1-7281-8961-1,10.1109/FIE44824.2020.9273930,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9273930,Introductory Programming;Computational Thinking;Visual Learning;Dynamic Classroom;Retention,Programming profession;Education;Visualization;Syntactics;Python;Problem-solving;Flowcharts,,4.0,,20.0,IEEE,4 Dec 2020,,,IEEE,IEEE Conferences,8,8
Developing Computational Thinking and Reading and Writing Skills through an Approach for Creating Games,K. T. Fernandes; E. H. da Silva Aranha; M. J. N. R. Lucena; G. L. de Souza Fernandes,"Post- Graduation in Systems and Computing - PPgSC, Federal University of Rio Grande do Norte - UFRN, Natal, Brazil; Depto of Mathematics and Applied Informatics - DIMAP, Federal University of Rio Grande do Norte - UFRN, Natal, Brazil; Depto of Mathematics and Applied Informatics - DIMAP, Federal University of Rio Grande do Norte - UFRN, Natal, Brazil; Childhood Education Center - NEI, Federal University of Rio Grande do Norte - UFRN, Natal, Brazil",2020 IEEE Frontiers in Education Conference (FIE),4 Dec 2020,2020,,,1,8,"Research and full paper. Digital games are increasingly a part of our daily lives and are already considered teaching and learning tools. However, its production and documentation is a very complicated task that requires programming skills and knowledge from different areas. This has hampered the development of games in the classroom environment. On the other hand, some teachers have proposed this activity to enable their students to learn school content in a more meaningful way and, consequently, improve learning rates. An alternative for the adoption of game-based learning is an unplugged approach for creating games based on natural language, in which students learn the fundamentals of computing in a playful way and without the use of computers. In this context, this article presents an approach that proposes the creation of games in an unplugged way by using texts produced by students, thus favoring the development of computational thinking and reading and writing skills in the classroom. Also, it may support the students' interest in the computing area by motivating them to enter a higher education course or pursue a career in that area. The results of the exploratory study show that the proposed approach can favor the development of computational thinking, as well as motivate the production of texts, developing students' reading and writing skills, therefore contributing to the improvement of learning assessments.",2377-634X,978-1-7281-8961-1,10.1109/FIE44824.2020.9274065,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9274065,computational thinking;reading and writing skills;game design;unplugged,Games;Production;Writing;Education;Computers;Tools;Mathematics,,4.0,,61.0,IEEE,4 Dec 2020,,,IEEE,IEEE Conferences,8,7
A Robotics-based Learning Environment Supporting Computational Thinking Skills — Design and Development,K. Tengler; O. Kastner-Hauler; B. Sabitzer,"Department of Media pedagogy, University of Teacher Education Lower Austria, Baden, Austria; Department of Media pedagogy, University of Teacher Education Lower Austria, Baden, Austria; Department of STEM Education, Johannes Kepler University Linz, Linz, Austria",2021 IEEE Frontiers in Education Conference (FIE),20 Dec 2021,2021,,,1,6,"This Research to Practice Full Paper presents the development of a robotics-based learning environment using an educational design research approach. Contemporary teaching should prepare learners for everyday and working life, suggesting that this can only be achieved by implementing Digital Education from primary education onwards. Since computer science education is planned to be anchored in the Austrian primary school curriculum as an interdisciplinary competence development, research into teaching methods and content suitable for this area is becoming increasingly necessary. In this context, the transfer of innovations and didactic approaches into teaching is one of the biggest challenges. Introducing coding and robotics would be a possible strategy. Educational robotics provide access to real-world scenarios and offer age-appropriate possibilities to explore digital aspects of living and working environments. Combined with narrative methods, such as digital storytelling, problem-solving skills could be developed. Since the implementation of computer science in primary education requires practical and theoretical knowledge, an educational design approach is used that takes this aspect into account and allows close interaction between researchers and practitioners. This paper focuses on investigating a feasible and effective robotics-based learning environment for developing and supporting problem-solving skills at primary school using the learning and teaching method digital storytelling. Hence, the development of the learning environment and the didactic approach gained from qualitative results of interviews and observations from the first cycle of the research project are presented, providing plausible arguments for further implementing this robotics-based learning environment.",2377-634X,978-1-6654-3851-3,10.1109/FIE49875.2021.9637351,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9637351,computational thinking;educational robotics;digital storytelling;primary school,Computer science;Technological innovation;Conferences;Education;Encoding;Computer science education;Problem-solving,,6.0,,33.0,IEEE,20 Dec 2021,,,IEEE,IEEE Conferences,8,8
Exploring the Balance Between Computational Thinking and Learning Motivation in Elementary Programming Education: An Empirical Study With Game-Based Learning,H. Liu; Z. Wu; Y. Lu; L. Zhu,"Shanghai University of Finance and Economics, Shanghai, China; Osaka University, Osaka, Japan; Chuo University, Tokyo, Japan; University of Minnesota, Minneapolis, MN, USA",IEEE Transactions on Games,17 Mar 2023,2023,15.0,1.0,95,107,"Computational thinking (CT) skills are generally regarded as a basic ability for problem-solving and are gradually filtering down to younger age groups. Existing research has attempted to increase interaction and enhance the learning interest of elementary school students through block-based programming environments represented by Scratch. However, criticism suggests that this approach has potential long-term constraints on CT education. Therefore, this study designed a game-based project to investigate students’ learning motivation and CT performance in different programming environments. A total of 108 fifth-grade students participated in the experiment and were divided into two experimental groups (EG1 and EG2) and a control group (CG). The students in experimental groups all undertook game-based learning, while EG1 students used C++ and EG2 students used Scratch; CG students used C++ for traditional algorithm-based learning. Findings suggest that traditional programming languages with game-based learning can also substantially improve learning interest, which can promote the efficiency of improving CT for students who already have some motivation and foundation for learning. But for students who still lack motivation, are also encouraged to develop an interest in a block-based programming environment. Teachers can choose the most appropriate approach for students to find the best balance between learning efficiency and long-term interest.",2475-1510,,10.1109/TG.2022.3143701,"Computer Center of the Children's Palace, China Welfare Institute; Osaka University Foundation for Future; ",https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9684681,Computational thinking (CT);elementary education;game-based learning;learning motivation;programming,Programming profession;Education;Programming environments;Games;Computer languages;C++ languages;Problem-solving,,7.0,,46.0,IEEE,18 Jan 2022,,,IEEE,IEEE Journals,8,6
"Fostering computational thinking in engineering education: Challenges, examples, and best practices",S. Gross; M. Kim; J. Schlosser; C. Mohtadi; D. Lluch; D. Schneider,"MathWorks GmbH, Ismaning, Germany; MathWorks GmbH, Ismaning, Germany; MathWorks GmbH, Ismaning, Germany; MathWorks Ltd., Cambridge, United Kingdom; Math Works, Inc., Natick, MA, USA; Institute of Imaging & Computer Vision, RWTH Aachen University, Aachen, Germany",2014 IEEE Global Engineering Education Conference (EDUCON),5 Jun 2014,2014,,,450,459,"Computational Thinking is a core capability for most engineers. The term summarizes a set of skills needed to transform real-life challenges into problems that can be solved with the help of a computer and to apply computer-based solutions to questions at hand. This mindset is fundamental to almost every engineering task. However, teaching Computational Thinking is a great challenge for educators worldwide. In designing and implementing university curricula, one has to take an increasing number of arguments into consideration. Technological progress requires the design, creation, and analysis of increasingly large and complex systems. Engineering working environments and tasks demand interdisciplinary teams and close communication between involved groups. In designing engineering curricula, these factors need to be considered and the necessary skills must be implicitly or explicitly developed. This paper highlights three examples of classes and projects aimed at enabling students to develop and increase Computational Thinking through systematic introduction of computational tools. From these successful case studies, the paper derives six best practices for fostering Computational Thinking in engineering education. A review of several examples is given, that are used to highlight and extract best practices. This provides a comprehensive overview of the relationships and simplifies the application of the aforementioned principles to course and curriculum designs.",2165-9567,978-1-4799-3191-0,10.1109/EDUCON.2014.6826132,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6826132,curriculum development;computational thinking;engineering skill set;education concepts specific for engineering education;industry and engineering education;integrated curriculum;education tools;project based learning,Engineering education;Computers;Educational institutions;MATLAB;Robot sensing systems;Hardware,,17.0,,33.0,IEEE,5 Jun 2014,,,IEEE,IEEE Conferences,8,8
A Strategy for the Development of Computational Thinking from Game Design Specifications,K. Tavares Fernandes; M. Lucena; E. Aranha,"Department of Informatics and Applied Mathematics, University Federal of Rio Grande do Norte - UFRN Natal, Brazil; Department of Informatics and Applied Mathematics, University Federal of Rio Grande do Norte - UFRN Natal, Brazil; Department of Informatics and Applied Mathematics, University Federal of Rio Grande do Norte - UFRN Natal, Brazil",2019 IEEE 19th International Conference on Advanced Learning Technologies (ICALT),2 Sep 2019,2019,2161-377X,,386,388,"Digital games are becoming more and more a part of our daily lives. After realizing this, several educators have been motivated to use games as teaching and learning tools. In this sense, it is possible to involve teachers and students in the production of their own games, thus contributing both to the development of computational thinking and to acquiring knowledge related to the different disciplines involved in this process. Despite the benefits, the production of games is a complex task that requires knowledge of a specific domain and presents a significant learning curve for students and teachers. The choice of using effective strategies such as Model-Driven Engineering (MDE) practices supported by a Controlled Natural Language (CNL) to promote the production of games in the educational context is decisive and can favor the adoption of game-based learning. This work proposes a strategy for the specification of game design for digital games by students and teachers in the classroom, that can promote the development of computational thinking, as well as reading and writing skills.",2161-377X,978-1-7281-3485-7,10.1109/ICALT.2019.00122,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8820846,digital games;game design;computacional thinking;learning,Games;Writing;Education;Production;Natural languages;Tools;Conferences,,,,18.0,IEEE,2 Sep 2019,,,IEEE,IEEE Conferences,8,7
Position: IntelliBlox: A Toolkit for Integrating Block-Based Programming into Game-Based Learning Environments,S. Taylor; W. Min; B. Mott; A. Emerson; A. Smith; E. Wiebe; J. Lester,"Dept. of Computer Science, North Carolina State University, Raleigh, NC, USA; Dept. of Computer Science, North Carolina State University, Raleigh, NC, USA; Dept. of Computer Science, North Carolina State University, Raleigh, NC, USA; Dept. of Computer Science, North Carolina State University, Raleigh, NC, USA; Dept. of Computer Science, North Carolina State University, Raleigh, NC, USA; Dept. of STEM Education, North Carolina State University, Raleigh, NC, USA; Dept. of Computer Science, North Carolina State University, Raleigh, NC, USA",2019 IEEE Blocks and Beyond Workshop (B&B),27 Dec 2019,2019,,,55,58,"Block-based programming languages reduce the need to learn low-level programming syntax while enabling novice learners to focus on computational thinking skills. Game-based learning environments have been shown to create effective and engaging learning experiences for students in a broad range of educational domains. The fusion of block-based programming with game-based learning offers significant potential to motivate learners to develop computational thinking skills. A key challenge educational game developers face in creating rich, interactive learning experiences that integrate computational thinking activities is the lack of an embeddable block-based programming toolkit. Current block-based programming languages, such as Blockly and Scratch, cannot be easily embedded into industry-standard 3D game engines. This paper presents IntelliBlox, a Blockly-inspired toolkit for the Unity cross-platform game engine that enables learners to create block-based programs within immersive game-based learning environments. Our experience using IntelliBlox suggests that it is an effective toolkit for integrating block-based programming challenges into game-based learning environments.",,978-1-7281-4849-6,10.1109/BB48857.2019.8941222,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8941222,block-based programming;game-based learning;K-12 computer science education;computational thinking,Games;Programming profession;Engines;Three-dimensional displays;Education,,7.0,,21.0,IEEE,27 Dec 2019,,,IEEE,IEEE Conferences,8,7
Computational Thinking: Learning by Doing with the Cinco Adventure Game Tool,F. Gossen; D. Kühn; T. Margaria; A. -L. Lamprecht,"Dept. of Computer Science and Information Systems, University of Limerick, Ireland; Dept. of Computer Science and Information Systems, University of Limerick, Ireland; Dept. of Computer Science and Information Systems, University of Limerick, Ireland; Dept. of Information and Computing Sciences, Utrecht University, Netherlands",2018 IEEE 42nd Annual Computer Software and Applications Conference (COMPSAC),22 Jun 2018,2018,1.0,,990,999,"Aspiring software developers, like the novice students in Computer Science courses, need to acquire a thorough understanding of fundamental computational concepts like sequential execution, conditional branching, loops, modularisation, hierarchy and reuse. This understanding and ""computational thinking"" is deepened when they encounter the concepts in different contexts and environments, as opposed to only in one traditional programming language. In this paper, we describe how we used the Cinco Adventure Game Tool, a tool that allows students to model simple browser games in an intuitive graphical framework, to train basic computational concepts in a creative and engaging, learning-by-doing fashion. On purpose, we steered away from traditional programming languages, in order to separate the use of the concepts and constructs from the hurdle of a programming language syntax and development environment. The experiences with a large group of first-term Computer Science students in two successive years were very positive: The students had no problems in understanding and using the concepts, used the tool proficiently and enjoyed designing and modelling the games. Working together on a game project in small groups, they showed sustained engagement, developed a high level of confidence, and created quite complex games containing various fundamental computational constructs.",0730-3157,978-1-5386-2667-2,10.1109/COMPSAC.2018.00175,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8377800,"Computer science education, Computational thinking, Model-driven development",Games;Tools;Education;Unified modeling language;Computational modeling;Software,,14.0,,37.0,IEEE,22 Jun 2018,,,IEEE,IEEE Conferences,8,7
Innovative Approach to Enhancing STEM Skills through Educational Games: Work in Progress,M. H. Dlab; B. Crnković; I. Traunkar; V. M. Crnković,"Faculty of Informatics and Digital Technologies, University of Rijeka, Rijeka, Croatia; Faculty of Mathematics, University of Rijeka, Rijeka, Croatia; Faculty of Mathematics, University of Rijeka, Rijeka, Croatia; Faculty of Mathematics, University of Rijeka, Rijeka, Croatia",2024 IEEE Frontiers in Education Conference (FIE),26 Feb 2025,2024,,,1,5,"This innovative practice paper describes a work in progress on creating and applying educational games that develop mathematical and computational thinking within the project Science&Math educational games from preschool to university - SciMaG. Using educational games, especially in STEM fields, is an effective way to engage students and promote key skills across different age groups and environments. Such activities promote problem solving, logical thinking, strategic planning, and other important skills and can be used with students of different age groups in the classroom, in extracurricular activities, or at home. STEM science outreach activities organized as part of science festivals and similar events can be an excellent opportunity for a game-based approach. However, organizing events for large numbers of participants can pose a logistical challenge in terms of volunteer availability. This paper presents the results of a study in which game-based activities to develop mathematical and computational thinking were integrated into a science outreach event for primary school students on the occasion of Pi-Day. The innovative aspect of the approach is reflected in the use of a combination of games (commercial, newly developed games, and games inspired by commercial ones) which have an interesting math basis and require mathematical or computational thinking skills as well as in the introduction of peer teaching through attracting high-school students as volunteers for the organized event. In the evaluation of the approach, the perceptions of the primary school students (Ns=295), their teachers (NT=19), and the high-school students participating as volunteers in the organized event (Nv=11) were examined using a questionnaire-based study. All groups of participants responded positively and confirmed educational potential of the games. Results confirmed that the activities were well-received and that such events have the potential to enhance learning experiences in STEM. The results also provide valuable insights and motivation for further development of educational games within the SciMaG project.",2377-634X,979-8-3503-5150-7,10.1109/FIE61694.2024.10893066,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10893066,STEM;games;computational thinking;science outreach;SciMaG project,Educational robots;Education;Games;Strategic planning;Teamwork;Problem-solving;STEM,,,,40.0,IEEE,26 Feb 2025,,,IEEE,IEEE Conferences,8,7
Computer programming as an educational tool in the English classroom a preliminary study,J. Moreno-León; G. Robles,"Programamos.es Sevilla, Spain; GSyC/LibreSoft, Universidad Rey Juan Carlos Madrid, Spain",2015 IEEE Global Engineering Education Conference (EDUCON),30 Apr 2015,2015,,,961,966,"Computational thinking, a problem solving method that uses computer science techniques, has recently become mainstream as many governments and major Internet companies are promoting programming skills among children. However, little is known about how programming affects other aspects of life beyond the acquired programming skills. In this regard, this paper summarizes the work done in the school San Diego and San Vicente (Madrid, Spain) during the third quarter of the year 2013/2014, where we conducted a study with four groups of students in 4th and 5th grade to measure to what extent the use of computer programming in English classes can be an interesting educational tool with a positive impact on the learning otucome of the students. The results show that the groups working with programming activities improved more than the groups using traditional resources. Moreover, when asked via surveys at the end of the study, most students felt that coding was a positive influence, not only for learning English, but for developing other important skills as teamwork and learning to learn.",2165-9567,978-1-4799-1908-6,10.1109/EDUCON.2015.7096089,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7096089,computer programming;coding;English;educational tool;computational thinking;technology-enhanced learning,Programming profession;Computers;Europe;Encoding;Education;Conferences,,12.0,,16.0,IEEE,30 Apr 2015,,,IEEE,IEEE Conferences,8,9
Analyzing the Learning Process in Online Educational Game Design: A Case Study,N. Ahmadi; M. Jazayeri,"Faculty of Informatics, University of Lugano, Lugano, Switzerland; Faculty of Informatics, University of Lugano, Lugano, Switzerland",2014 23rd Australian Software Engineering Conference,5 Jun 2014,2014,,,84,93,"Educational game design environments are used for teaching computational thinking and software engineering concepts to novices. In software engineering education, there has recently been calls for ""innovative methods for software teaching and training in online courses"" (http://2014.icse-conferences.org/seet). However, to date, learning these concepts is tied to a formal learning environment and the presence of a teacher. In line with the new educational opportunities provided by the Web such as massive open online courses (MOOCs) and e-learning 2.0 platforms, we have created an online educational game design environment with integrated learning resources including video tutorials, showcases, and communication tools. To understand the effect of online educational game design environments with integrated support for learning on novices' use of the system and their learning, we conducted a mixed-method study with nine participants. While the learning goals were achieved to a high degree, the analysis of participants' interaction with the system reveals interesting phenomena about user preferences, such as the fact that during the given computational thinking tasks, the participants preferred the synchronous communication channel to other forms of commonly provided learning resources such as forums.",2377-5408,978-1-4799-3149-1,10.1109/ASWEC.2014.34,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6824112,computer science education;computational thinking;educational game design;end-user programming;cyberlearning;MOOC;learning analytics,Games;Software engineering;Programming profession;Education;Software;Communities,,3.0,,29.0,IEEE,5 Jun 2014,,,IEEE,IEEE Conferences,8,7
Data Mining Framework to Analyze the Evolution of Computational Thinking Skills in Game Building Workshops,A. A. de Souza; T. S. Barcelos; R. Munoz; R. Villarroel; L. A. Silva,"Laboratório de Computação Aplicada–LABCOM3, Instituto Federal de Educação, Ciência e Tecnologia de São Paulo, Guarulhos, Brazil; Laboratório de Computação Aplicada–LABCOM3, Instituto Federal de Educação, Ciência e Tecnologia de São Paulo, Guarulhos, Brazil; Centro de Investigación y Desarrollo en Ingeniería en Salud, Universidad de Valparaíso, Valparaíso, Chile; Escuela de Ingeniería Informática, Pontificia Universidad Católica de Valparaíso, Valparaíso, Chile; Programa de Pós-Graduação em Engenharia Elétrica e Computação, Universidade Presbiteriana Mackenzie, Campinas, Brazil",IEEE Access,18 Jul 2019,2019,7.0,,82848,82866,"Computational thinking has become a required capability in the student learning process, and digital games as a teaching approach have presented promising educational results in the development of this competence. However, properly evaluating the effectiveness and, consequently, student progress in a course using games is still a challenge. One of the most widely implemented ways of evaluation is with an automated analysis of the code developed in the classes during the construction of digital games. Nevertheless, this topic has not yet been explored in aspects such as incremental learning, the model and teaching environment and the influences of acquiring skills and competencies of computational thinking. Motivated by this knowledge gap, this paper introduces a framework proposal to analyze the evolution of computational thinking skills in digital games classes. The framework is based on a data mining technique that aims to facilitate the discovery process of the patterns and behaviors that lead to the acquisition of computational thinking skills, by analyzing clusters with an unsupervised neural network of self-organizing maps (SOM) for this purpose. The framework is composed of a collection of processes and practices structured in data collection, data preprocessing, data analysis, and data visualization. A case study, using Scratch, was executed to validate this approach. The results point to the viability of the framework, highlighting the use of the visual exploratory data analysis, through the SOM maps, as an efficient tool to observe the acquisition of computational thinking skills by the student in an incremental course.",2169-3536,,10.1109/ACCESS.2019.2924343,"Pós-Graduação de Instituiçães de Ensino Particulares da Coordenação de Aperfeiçoamento de Pessoal de Nível Superior (CAPES-PROSUP), Brazil; Corporación de Fomento de la Producción (CORFO) 14ENI2-26905 “Nueva Ingeniería para el 203”—Pontificia Universidad Católica de Valparaíso, Chile; ",https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8743397,Analytical models;computer science education;data mining;data models;education;games;self-organizing feature maps,Games;Data mining;Education;Self-organizing feature maps;Conferences;Computer science,,20.0,,47.0,CCBY,21 Jun 2019,,,IEEE,IEEE Journals,8,7
Integrating computational thinking into english dialogue learning through graphical programming tool,X. Weng; G. K. W. Wong,"Faculty of Education, The University of Hong Kong, Hong Kong; University of Hong Kong, Hong Kong, HK","2017 IEEE 6th International Conference on Teaching, Assessment, and Learning for Engineering (TALE)",11 Jan 2018,2017,,,320,325,"Developing students' Computational Thinking (CT), which is an essential problem-solving skill for people living in the 21st century, becomes an outstanding purpose of promoting engineering education in K-12 classrooms. In this paper, CT is represented through the graphical programming language Scratch according to the three-dimensional CT framework proposed by Brennan and Resnick [1]. This project aims to explore the classroom effect of using graphical programming tool in learning English dialogue and investigate how to improve the integration of CT into English education with the elements of programming. To achieve these objectives, a qualitative method was adopted to collect data through class observations, programming projects, and semi-structured interviews. Nine primary students (n = 9) were the targeted participants, who attended extra-curricular lessons for computer programming using Scratch at their school in Hong Kong. The preliminary results show that the introduction of CT into English dialogue learning through graphical programming language can motivate primary school students to study English dialogue. To better connect CT with English education via graphical programming tools, students and the teacher in the group under study suggested making computers interact with people autonomically, designing games in graphical programming environments to encourage English learning, keeping the balance of students' graphical programming language learning skill and their English language skill, and adopting graphical programming language as a tool to finish the summative English language assignments.",2470-6698,978-1-5386-0900-2,10.1109/TALE.2017.8252356,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8252356,Computational Thinking;English dialogue learning;Graphical programming language;Classroom effect,Education;Tools;Programming profession;Computer languages;Interviews;Writing,,9.0,,19.0,IEEE,11 Jan 2018,,,IEEE,IEEE Conferences,8,7
Identifying Preliminary Design Principles for a Robotics-based Learning Environment,K. Tengler; O. Kastner-Hauler; B. Sabitzer,"Department of Media Pedagogy, University of Teacher Education Lower Austria, Baden, Austria; Department of Media Pedagogy, University of Teacher Education Lower Austria, Baden, Austria; Department of STEM Education, Johannes Kepler University Linz, Linz, Austria",2021 16th International Conference on Computer Science & Education (ICCSE),21 Oct 2021,2021,,,771,776,"In recent years, the interest in introducing programming activities into the classroom has increased, emphasizing the importance of promoting computational thinking in young learners. Robotics-based learning environments are intended to facilitate the learning of programming at the primary level and support developing skills such as collaboration, creativity, and problem-solving thinking in a cross-curricular approach. An Austrian research project focuses on developing and implementing a robotics-based learning environment using the educational design research approach to gain insights into the introduction of computational thinking in primary education. This paper reports on a study to identify preliminary design principles of the learning environment that form the basis of the prototyping cycle of the overall research. Data were collected by interviewing seven experts who have theoretical and practical expertise on educational robotics in primary education. The resulting six preliminary design principles describe the first insight into the design of robotics-based learning environments.",2473-9464,978-1-6654-1468-5,10.1109/ICCSE51940.2021.9569250,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9569250,design principles;computational thinking;educational robotics;primary school,Education;Collaboration;Problem-solving;Robots;Programming profession;Creativity,,1.0,,43.0,IEEE,21 Oct 2021,,,IEEE,IEEE Conferences,8,7
The Practice and Exploration of Scratch Programming Instruction in Elementary School Based on Game Design,Y. Huansong; W. Jia’En; S. Mengting,"School of Information Science and Technology, Hangzhou Normal University, Hangzhou, China; School of Information Science and Technology, Hangzhou Normal University, Hangzhou, China; School of Information Science and Technology, Hangzhou Normal University, Hangzhou, China","2021 IEEE Conference on Telecommunications, Optics and Computer Science (TOCS)",28 Jan 2022,2021,,,186,190,"With the proposal of quality-oriented education, Scratch programming teaching in elementary schools is of great importance to the growth and development of students. The visual interface, building block programming, and easy-to-use features of Scratch are suitable for teaching elementary school students, which can also better cultivate students’ analytical problem-solving skills and enhance their logical thinking. However, only a part of schools and students are currently learning this programming, and it is not popular enough yet. Moreover, if the teaching is mainly based on the teacher’s explanation, it will be boring. Therefore, there is a need to explore the teaching based on game design and combine teaching with fun, so that learning can become a more acceptable “game” for students, making the classroom atmosphere more active and improving the teaching quality of the classroom.",,978-1-6654-2498-1,10.1109/TOCS53301.2021.9688834,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9688834,Scratch programming;computational thinking;theory;capabilities;issues,Computer languages;Visualization;Education;Games;Production;Software;Telecommunications,,1.0,,10.0,IEEE,28 Jan 2022,,,IEEE,IEEE Conferences,8,7
Promoting Computer Science Learning with Block-Based Programming and Narrative-Centered Gameplay,W. Min; B. Mott; K. Park; S. Taylor; B. Akram; E. Wiebe; K. E. Boyer; J. Lester,"Department of Computer Science, North Carolina State University, Raleigh, NC, USA; Department of Computer Science, North Carolina State University, Raleigh, NC, USA; Department of Computer Science, North Carolina State University, Raleigh, NC, USA; Department of Computer Science, North Carolina State University, Raleigh, NC, USA; Department of Computer Science, North Carolina State University, Raleigh, NC, USA; Department of STEM Education, North Carolina State University, Raleigh, NC, USA; Computer & Information Science & Engineering, University of Florida, Gainesville, FL, USA; Department of Computer Science, North Carolina State University, Raleigh, NC, USA",2020 IEEE Conference on Games (CoG),20 Oct 2020,2020,,,654,657,"Recent years have seen increasing awareness of the need for all students in primary and secondary education to learn computer science (CS) concepts and skills. Educational games hold significant potential to serve as a platform for CS education because they integrate engaging problem solving with effective pedagogical strategies. This potential is especially high for narrative-centered educational games that embed learning activities within rich interactive stories. In this paper, we present an educational game featuring block-based programming challenges contextualized within an engaging narrative, designed to promote CS learning for middle school students (ages 11 to 13). In the game, students undertake problem-solving challenges that are aligned with the K-12 Computer Science Framework. Results from a classroom implementation of the game with middle grade students suggest that their perceived game control ratings are positively correlated with their progress in the game, which suggests the need for adaptively supporting students' game-based learning activities. Building on these findings, we discuss design implications for creating student-adaptive CS learning experiences in educational games that incorporate block-based programming enriched narrative-centered gameplay.",2325-4289,978-1-7281-4533-4,10.1109/CoG47356.2020.9231881,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9231881,Game-based learning;Computer science education;Computational thinking;Block-based programming,Games;Programming profession;Education;Task analysis;Problem-solving;Adaptation models;Syntactics,,11.0,,31.0,IEEE,20 Oct 2020,,,IEEE,IEEE Conferences,8,7
Utilizing a Data analytics project to increase student awareness of contemporary global issues,R. Ravikumar; P. Sadhwani,"Computer and Information Science, Dubai Women's College, Higher Colleges of Technology, Dubai, U.A.E.; General Studies Department, Dubai Women's College Higher Colleges of Technology, Dubai, U.A.E.",2020 Advances in Science and Engineering Technology International Conferences (ASET),16 Jun 2020,2020,,,1,5,"Computational thinking is irrefutably a must-have skill in today's digital world. This is why it is a requisite course in most college curricula. Computational thinking is a broad term encompassing fundamental concepts of computing such as formulating problems and expressing their solutions in computational steps that can be processed by a computer. The ability to organize and analyze data is also a part of computational thinking. Following this paradigm, educational institutions have adopted various methods to teach computational thinking including programming. This paper will explore a specific project within the computational thinking course taught as an introductory course in all major programs at the Higher Colleges of Technology in the United Arab Emirates. The intention of the paper is to demonstrate how a project-based data analytics assessment in such a course can be used to foster in students, a greater awareness of a contemporary and critical global issue such as waste management. To examine the effectiveness of this project, the paper documents and evaluates the work of a group of students who carried out data analysis on secondary data collected from a notable website on “waste management”. The methodology implemented for this task is developed based on a prescribed course syllabus and assessment structure which promotes student-centered and inter-disciplinary learning.",,978-1-7281-4640-9,10.1109/ASET48392.2020.9118395,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9118395,inter-disciplinary learning;cross-curricular;project-based learning;data analytics;coding;computer programming;global issues;waste management;computational thinking;engineering;digital;Python;academic;curriculum,Waste management;Data analysis;Collaborative work;Encoding;Task analysis;Programming profession;Creativity,,2.0,,17.0,IEEE,16 Jun 2020,,,IEEE,IEEE Conferences,8,8
Visual Design Problem-based Learning in a Virtual Environment Improves Computational Thinking and Programming Knowledge,A. Banic; R. Gamboa,"University of Wyoming, Laramie, WY, US; University of Wyoming, Laramie, WY, US",2019 IEEE Conference on Virtual Reality and 3D User Interfaces (VR),15 Aug 2019,2019,,,1588,1593,"In this paper, we present our design of a high school summer course which uses our Visual Design Problem-based Learning Pedagogy using Virtual Environments as a strategy to teach computer science. Students solved visual design problems by creating 3D sculptures in an online virtual environment. These creations were further explored and refined in immersive display systems fostering embodied learning and remote peer presence and support. To achieve the desired design, students use programming and computing concepts, such as loops, to solve those visual design centered problems, i.e. solving for composition, positive/negative space, balance, as opposed to computational problems first, i.e. create a loop, a fractal, randomized lines, etc. We present results from a study conducted on three high school summer courses. We compared the use of our Visual Design Problem-based teaching strategy (students wrote code to solve challenges based on art and design principles) to a traditional strategy (students wrote code to demonstrate comprehension of computer science concepts). Our results showed that test scores were higher for students in our Visual Design Problem-based courses. This work may have a positive impact on computer science education by increasing engagement, knowledge acquisition, and self-directed learning.",2642-5254,978-1-7281-1377-7,10.1109/VR.2019.8798013,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8798013,Visual Design Problem-based Pedagogy;problem-based learning;Online Virtual Environments;Embodied Learning;Virtual Sculpting;Increase Programming Knowledge;Spatial Art;CCS [Human-centered Computing]: Human-computer interaction (HCI);Interaction paradigms-Virtual Reality;[Human-centered Computing]: CCS Human-computer interaction (HCI);Empirical studies in HCI,Art;Visualization;Virtual environments;Programming profession;Three-dimensional displays,,12.0,,23.0,IEEE,15 Aug 2019,,,IEEE,IEEE Conferences,8,7
Scaffolding CT via Point-And-Click and P5.js,A. Valente; E. Marchetti; E. Abel,"Department for Media, Design, Learning and Cognition, University of Southern Denmark, Kolding, Denmark; Department for Media, Design, Learning and Cognition, University of Southern Denmark, Kolding, Denmark; Department for Media, Design, Learning and Cognition, University of Southern Denmark, Kolding, Denmark",2023 14th IIAI International Congress on Advanced Applied Informatics (IIAI-AAI),29 Dec 2023,2023,,,164,167,"This paper investigates how to provide meaningful scaffolding to bachelor humanities students, to enabled them to acquire Computational Thinking (CT) technical skills, and in particular basic programming competences. Two of the authors have been involved in the re-design, implementation and execution of a basic programming and CT course, offered to first-semester students as part of the Information science, IT and interaction design bachelor program, at the University of Southern Denmark (SDU). The central problem we faced in restructuring our introductory course, was finding a game genre that could support creative coding for beginners, be motivational and recognizable by the students, and would work with our use-modify-create learning approach. Our findings suggest that point-and-click games are an effective way to provide scaffolding and ease non-technical students into P5 programming. The genre has good expressive power, and the students were motivated because they recognized and could relate to the games they worked on. Future work will address students’ problems with scaling up the point-and-click games.",2472-0070,979-8-3503-2422-8,10.1109/IIAI-AAI59060.2023.00042,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10371611,Computational Thinks;Scaffolding;Humanities;Introduction to Programming;P5,Information science;Humanities;Face recognition;Games;Encoding;Informatics;Programming profession,,,,17.0,IEEE,29 Dec 2023,,,IEEE,IEEE Conferences,8,8
Transforming the Instruction of Introductory Computing to Engineering Students,A. R. Hurson; S. Sedigh,"Department of Computer Science, Missouri University of Science and Technology, Rolla, MO, USA; Department of Electrical and Computer Engineering, Missouri University of Science and Technology, Rolla, MO, USA",2010 IEEE Transforming Engineering Education: Creating Interdisciplinary Skills for Complex Global Environments,15 Jul 2010,2010,,,1,19,"Computer science as a discipline encompasses the study and creation of computational techniques for problem-solving. Unfortunately, much of the benefit of these techniques to engineering students is lost in translation, in part due to the disconnect between introductory computing courses and the disciplinary courses that introduce problems that could benefit from computational techniques. A considerable body of literature has documented the ineffectiveness of traditional programming courses in transferring usable knowledge to students, specifically where problem-solving skills and computational thinking are concerned. This paper describes a transformative change to the instruction of introductory computing to engineering students, in the context of a single non-major course. In the proposed architecture, a core lecture is supplemented with plug-in domain-specific modules and problems that are presented in domain-specific recitation/laboratory sections. The focus of the lecture component of the course is to introduce the core concepts and skills required for computational thinking, including algorithms and software engineering techniques. The recitation/laboratory component encourages and guides the application of these skills to introductory problems in engineering. The objective is to shift the emphasis from the minutia of the syntax of textual programming languages to computational thinking.",,978-1-4244-6042-7,10.1109/TEE.2010.5508834,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5508834,,Computer aided instruction;Engineering students;Problem-solving;Laboratories;Computer science;Computer architecture;Software algorithms;Software engineering;Application software;Computer languages,,,,24.0,IEEE,15 Jul 2010,,,IEEE,IEEE Conferences,8,9
